{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService';\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n}; // Register user\n// export const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n//     try {\n//         return await authService.register(user)\n//     } catch (error) {\n//         const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n//         return thunkAPI.rejectWithValue(message)\n//     }\n// })\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = '';\n    }\n  },\n  extraReducers: () => {}\n});\nexport default authSlice.reducer;\nexport const {\n  reset\n} = authSlice.actions;","map":{"version":3,"sources":["C:/Users/Michael/Documents/100devs/workout-react-app/frontend2/src/redux/authSlice.js"],"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","authSlice","name","reducers","reset","state","extraReducers","reducer","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AAEA,MAAMC,YAAY,GAAG;AACjBL,EAAAA,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU,IADH;AAEjBM,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,SAAS,EAAE,KAHM;AAIjBC,EAAAA,SAAS,EAAE,KAJM;AAKjBC,EAAAA,OAAO,EAAE;AALQ,CAArB,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAGb,WAAW,CAAC;AACjCc,EAAAA,IAAI,EAAE,MAD2B;AAEjCN,EAAAA,YAFiC;AAGjCO,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAGC,KAAD,IAAW;AACdA,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACAM,MAAAA,KAAK,CAACR,OAAN,GAAgB,KAAhB;AACAQ,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACL,OAAN,GAAgB,EAAhB;AACH;AANK,GAHuB;AAWjCM,EAAAA,aAAa,EAAE,MAAM,CAAE;AAXU,CAAD,CAA7B;AAcP,eAAeL,SAAS,CAACM,OAAzB;AACA,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAYH,SAAS,CAACO,OAA5B","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport authService from './authService'\r\n\r\nconst user = JSON.parse(localStorage.getItem('user'))\r\n\r\nconst initialState = {\r\n    user: user ? user : null,\r\n    isError: false,\r\n    isSuccess: false,\r\n    isLoading: false,\r\n    message: '',\r\n}\r\n\r\n// Register user\r\n// export const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\r\n//     try {\r\n//         return await authService.register(user)\r\n//     } catch (error) {\r\n//         const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\r\n//         return thunkAPI.rejectWithValue(message)\r\n//     }\r\n// })\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        reset: (state) => {\r\n            state.isLoading = false\r\n            state.isError = false\r\n            state.isSuccess = false\r\n            state.message = ''\r\n        }\r\n    },\r\n    extraReducers: () => {}\r\n})\r\n\r\nexport default authSlice.reducer\r\nexport const { reset } = authSlice.actions\r\n\r\n"]},"metadata":{},"sourceType":"module"}
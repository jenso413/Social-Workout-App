{"ast":null,"code":"var _jsxFileName = \"/home/andrew/jenso/social-workout-app/frontend2/src/components/LoggerHeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport '../css/loggerHeader.css';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport MenuOption from './MenuOption';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoggerHeader(_ref) {\n  _s();\n\n  let {\n    displayAddWorkout,\n    displayLogger,\n    workoutName,\n    setWorkoutName,\n    programName,\n    workoutNameList,\n    dropdownClick\n  } = _ref;\n  const [toggleDropdown, setToggleDropdown] = useState(false);\n  const [addingWorkout, setAddingWorkout] = useState(true);\n  const displayedOption = useRef();\n\n  function displayOption(e) {\n    setAddingWorkout(false); // Otherwise the DOM doesn't update in time for there to be an innerText value for the nonexistent h1\n\n    setTimeout(() => {\n      displayedOption.current.innerText = e.target.innerText;\n    }, 0);\n  }\n\n  function toggleMenu() {\n    setToggleDropdown(prevState => !prevState);\n  }\n\n  function handleAddWorkoutClick() {\n    setAddingWorkout(true);\n    toggleMenu();\n    displayAddWorkout();\n  }\n\n  const menuOptions = workoutNameList.map((workout, index) => {\n    return /*#__PURE__*/_jsxDEV(MenuOption, {\n      name: workout,\n      displayOption: displayOption,\n      toggleMenu: toggleMenu,\n      displayLogger: displayLogger,\n      dropdownClick: dropdownClick\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loggerHeader\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"community-name\",\n      children: programName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `select ${toggleDropdown && 'select-clicked'}`,\n        children: [addingWorkout ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"new-workout-input\",\n          value: workoutName,\n          onChange: e => setWorkoutName(e.target.value),\n          placeholder: \"New Workout\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"selected\",\n          ref: displayedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `caret ${toggleDropdown && 'caret-rotate'}`,\n          style: {\n            fontSize: 40\n          },\n          onClick: () => setToggleDropdown(prevState => !prevState)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: `dropdown-menu ${toggleDropdown && 'menu-open'}`,\n        children: [menuOptions, /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"menu-option\",\n          onClick: handleAddWorkoutClick,\n          children: \"New Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n} //<input value={workoutName} onChange={handleWorkoutNameChange}/> \n// Have an example, starter workout\n// Everyone is part of it at first\n// Called 'IRON Workout'\n\n_s(LoggerHeader, \"+tVgEpjT4fWhSkaCa2NnqJn6tXs=\");\n\n_c = LoggerHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggerHeader\");","map":{"version":3,"names":["React","useState","useRef","ArrowDropDownIcon","MenuOption","LoggerHeader","displayAddWorkout","displayLogger","workoutName","setWorkoutName","programName","workoutNameList","dropdownClick","toggleDropdown","setToggleDropdown","addingWorkout","setAddingWorkout","displayedOption","displayOption","e","setTimeout","current","innerText","target","toggleMenu","prevState","handleAddWorkoutClick","menuOptions","map","workout","index","value","fontSize"],"sources":["/home/andrew/jenso/social-workout-app/frontend2/src/components/LoggerHeader.js"],"sourcesContent":["import React, { useState, useRef } from 'react'\nimport '../css/loggerHeader.css'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport MenuOption from './MenuOption'\n\nexport default function LoggerHeader({ displayAddWorkout, displayLogger, workoutName, setWorkoutName, programName, workoutNameList, dropdownClick }) {\n\n    const [toggleDropdown, setToggleDropdown] = useState(false)\n    const [addingWorkout, setAddingWorkout] = useState(true)\n    const displayedOption = useRef()\n    \n    function displayOption(e) {\n        \n        setAddingWorkout(false)\n        // Otherwise the DOM doesn't update in time for there to be an innerText value for the nonexistent h1\n        setTimeout(() => {\n            displayedOption.current.innerText = e.target.innerText\n        }, 0);\n        \n    }\n\n    function toggleMenu() {\n        setToggleDropdown(prevState => !prevState)\n    }\n\n    function handleAddWorkoutClick() {\n        \n        setAddingWorkout(true)\n\n        toggleMenu()\n\n        displayAddWorkout()\n        \n    }\n\n    const menuOptions = workoutNameList.map((workout, index) => {\n        return <MenuOption key={index} name={workout} displayOption={displayOption} toggleMenu={toggleMenu} displayLogger={displayLogger} dropdownClick={dropdownClick}/>\n    })\n\n\n    return (\n        <div className='loggerHeader'>\n            <h1 className='community-name'>{programName}</h1>\n            <div className='dropdown'>\n                <div className={`select ${toggleDropdown && 'select-clicked'}`}>\n                    {addingWorkout ? \n                        (<input className='new-workout-input' value={workoutName} onChange={(e) => setWorkoutName(e.target.value)} placeholder='New Workout' autoFocus />)\n                        : \n                        (<h1 className='selected' ref={displayedOption}></h1>)}\n                    \n                    {/* <ArrowDropDownIcon className={`caret ${toggleDropdown && 'caret-rotate'}`} style={{fontSize: 40}} onClick={() => setToggleDropdown(prevState => !prevState)}/> */}\n                    <div className={`caret ${toggleDropdown && 'caret-rotate'}`} style={{fontSize: 40}} onClick={() => setToggleDropdown(prevState => !prevState)}></div>\n                </div>\n                <ul className={`dropdown-menu ${toggleDropdown && 'menu-open'}`}>                    \n                    {menuOptions}\n                    <li className='menu-option' onClick={handleAddWorkoutClick}>New Workout</li>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\n//<input value={workoutName} onChange={handleWorkoutNameChange}/> \n\n// Have an example, starter workout\n        // Everyone is part of it at first\n        // Called 'IRON Workout'"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAO,yBAAP;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,eAAe,SAASC,YAAT,OAAsI;EAAA;;EAAA,IAAhH;IAAEC,iBAAF;IAAqBC,aAArB;IAAoCC,WAApC;IAAiDC,cAAjD;IAAiEC,WAAjE;IAA8EC,eAA9E;IAA+FC;EAA/F,CAAgH;EAEjJ,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,KAAD,CAApD;EACA,MAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,IAAD,CAAlD;EACA,MAAMgB,eAAe,GAAGf,MAAM,EAA9B;;EAEA,SAASgB,aAAT,CAAuBC,CAAvB,EAA0B;IAEtBH,gBAAgB,CAAC,KAAD,CAAhB,CAFsB,CAGtB;;IACAI,UAAU,CAAC,MAAM;MACbH,eAAe,CAACI,OAAhB,CAAwBC,SAAxB,GAAoCH,CAAC,CAACI,MAAF,CAASD,SAA7C;IACH,CAFS,EAEP,CAFO,CAAV;EAIH;;EAED,SAASE,UAAT,GAAsB;IAClBV,iBAAiB,CAACW,SAAS,IAAI,CAACA,SAAf,CAAjB;EACH;;EAED,SAASC,qBAAT,GAAiC;IAE7BV,gBAAgB,CAAC,IAAD,CAAhB;IAEAQ,UAAU;IAEVlB,iBAAiB;EAEpB;;EAED,MAAMqB,WAAW,GAAGhB,eAAe,CAACiB,GAAhB,CAAoB,CAACC,OAAD,EAAUC,KAAV,KAAoB;IACxD,oBAAO,QAAC,UAAD;MAAwB,IAAI,EAAED,OAA9B;MAAuC,aAAa,EAAEX,aAAtD;MAAqE,UAAU,EAAEM,UAAjF;MAA6F,aAAa,EAAEjB,aAA5G;MAA2H,aAAa,EAAEK;IAA1I,GAAiBkB,KAAjB;MAAA;MAAA;MAAA;IAAA,QAAP;EACH,CAFmB,CAApB;EAKA,oBACI;IAAK,SAAS,EAAC,cAAf;IAAA,wBACI;MAAI,SAAS,EAAC,gBAAd;MAAA,UAAgCpB;IAAhC;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,UAAf;MAAA,wBACI;QAAK,SAAS,EAAG,UAASG,cAAc,IAAI,gBAAiB,EAA7D;QAAA,WACKE,aAAa,gBACT;UAAO,SAAS,EAAC,mBAAjB;UAAqC,KAAK,EAAEP,WAA5C;UAAyD,QAAQ,EAAGW,CAAD,IAAOV,cAAc,CAACU,CAAC,CAACI,MAAF,CAASQ,KAAV,CAAxF;UAA0G,WAAW,EAAC,aAAtH;UAAoI,SAAS;QAA7I;UAAA;UAAA;UAAA;QAAA,QADS,gBAGT;UAAI,SAAS,EAAC,UAAd;UAAyB,GAAG,EAAEd;QAA9B;UAAA;UAAA;UAAA;QAAA,QAJT,eAOI;UAAK,SAAS,EAAG,SAAQJ,cAAc,IAAI,cAAe,EAA1D;UAA6D,KAAK,EAAE;YAACmB,QAAQ,EAAE;UAAX,CAApE;UAAoF,OAAO,EAAE,MAAMlB,iBAAiB,CAACW,SAAS,IAAI,CAACA,SAAf;QAApH;UAAA;UAAA;UAAA;QAAA,QAPJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAUI;QAAI,SAAS,EAAG,iBAAgBZ,cAAc,IAAI,WAAY,EAA9D;QAAA,WACKc,WADL,eAEI;UAAI,SAAS,EAAC,aAAd;UAA4B,OAAO,EAAED,qBAArC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH,C,CAED;AAEA;AACQ;AACA;;GA7DgBrB,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}
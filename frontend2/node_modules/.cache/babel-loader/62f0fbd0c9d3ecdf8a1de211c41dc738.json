{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\100devs\\\\workout-react-app\\\\frontend2\\\\src\\\\components\\\\Friends.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport AddFriend from './AddFriend';\nimport FriendList from './FriendList';\nimport { Avatar } from '@mui/material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // Basic idea is that you can search for friends, add them (when added, send friend request)\n// You can also see your current friends, and remove them as friend\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Friends() {\n  _s();\n\n  const [friendInput, setFriendInput] = useState('');\n  const [friend, setFriend] = useState({});\n  const [isActive, setIsActive] = useState(false);\n\n  function findUser() {\n    fetch(`/api/auth/user/${friendInput}`).then(async res => {\n      if (res.ok) {\n        const jsonFriend = await res.json();\n        setFriend(jsonFriend);\n      } else {\n        console.log('no data');\n        toast.error('User not found');\n      }\n    });\n  }\n\n  console.log(friend);\n\n  const friendNotFoundToast = () => {\n    toast.error('User not found');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(FriendList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            height: '400px',\n            width: '400px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter a username: \",\n          value: friendInput,\n          onChange: e => setFriendInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: findUser,\n          children: \"Find User!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `modal-bg ${isActive ? 'bg-active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(AddFriend, {\n          friend: friend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Friends, \"sfrrWyzQ96LyTUsCt2zc9Uhc5Xo=\");\n\n_c = Friends;\nexport default Friends;\n\nvar _c;\n\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/100devs/workout-react-app/frontend2/src/components/Friends.js"],"names":["React","useState","Navbar","AddFriend","FriendList","Avatar","ToastContainer","toast","Friends","friendInput","setFriendInput","friend","setFriend","isActive","setIsActive","findUser","fetch","then","res","ok","jsonFriend","json","console","log","error","friendNotFoundToast","height","width","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP,C,CAEA;AACA;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEf,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;;AAEA,WAASc,QAAT,GAAoB;AAChBC,IAAAA,KAAK,CAAE,kBAAiBP,WAAY,EAA/B,CAAL,CACKQ,IADL,CACU,MAAOC,GAAP,IAAe;AACjB,UAAIA,GAAG,CAACC,EAAR,EAAY;AACR,cAAMC,UAAU,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAzB;AACAT,QAAAA,SAAS,CAACQ,UAAD,CAAT;AACH,OAHD,MAGO;AACHE,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAhB,QAAAA,KAAK,CAACiB,KAAN,CAAY,gBAAZ;AACH;AACJ,KATL;AAUH;;AAEDF,EAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;;AAEA,QAAMc,mBAAmB,GAAG,MAAM;AAC9BlB,IAAAA,KAAK,CAACiB,KAAN,CAAY,gBAAZ;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAACE,YAAAA,MAAM,EAAE,OAAT;AAAkBC,YAAAA,KAAK,EAAE;AAAzB;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAO,UAAA,WAAW,EAAC,oBAAnB;AAAwC,UAAA,KAAK,EAAElB,WAA/C;AAA4D,UAAA,QAAQ,EAAGmB,CAAD,IAAOlB,cAAc,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA3F;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,OAAO,EAAEf,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI;AAAK,QAAA,SAAS,EAAG,YAAWF,QAAQ,GAAG,WAAH,GAAiB,EAAG,EAAxD;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA3CQH,O;;KAAAA,O;AA6CT,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport Navbar from './Navbar'\r\nimport AddFriend from './AddFriend'\r\nimport FriendList from './FriendList'\r\nimport { Avatar } from '@mui/material'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// Basic idea is that you can search for friends, add them (when added, send friend request)\r\n// You can also see your current friends, and remove them as friend\r\n\r\nfunction Friends() {\r\n\r\n    const [friendInput, setFriendInput] = useState('')\r\n    const [friend, setFriend] = useState({})\r\n    const [isActive, setIsActive] = useState(false)\r\n\r\n    function findUser() {\r\n        fetch(`/api/auth/user/${friendInput}`)\r\n            .then(async (res) => {\r\n                if (res.ok) {\r\n                    const jsonFriend = await res.json()\r\n                    setFriend(jsonFriend)\r\n                } else {\r\n                    console.log('no data')\r\n                    toast.error('User not found')\r\n                }\r\n            })\r\n    }\r\n\r\n    console.log(friend)\r\n\r\n    const friendNotFoundToast = () => {\r\n        toast.error('User not found')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className='grid-container'>\r\n                <FriendList />\r\n                <div>\r\n                    <Avatar style={{height: '400px', width: '400px'}}/>\r\n                    {/* Search for users here */}\r\n                    <input placeholder='Enter a username: ' value={friendInput} onChange={(e) => setFriendInput(e.target.value)} />\r\n                    <button onClick={findUser}>Find User!</button>\r\n                    <ToastContainer />\r\n                </div>\r\n                <div className={`modal-bg ${isActive ? 'bg-active' : ''}`}>\r\n                    <AddFriend friend={friend}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends"]},"metadata":{},"sourceType":"module"}
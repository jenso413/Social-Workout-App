{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService';\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n}; // Register user\n\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); // Login user\n\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  try {\n    return await authService.login(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); // Logout\n\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n}); // Update community \n\nexport const updateCommunity = createAsyncThunk('auth/community', async (userData, thunkAPI) => {\n  try {\n    console.log(userData);\n    return await authService.updateCommunity(userData);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); // Add friend\n\nexport const addFriend = createAsyncThunk('/friend/add', async (ids, thunkAPI) => {\n  console.log(ids);\n\n  try {\n    return await authService.addFriend(ids);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(updateCommunity.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateCommunity.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(updateCommunity.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(addFriend.pending, state => {\n      state.isLoading = true;\n    }).addCase(addFriend.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(addFriend.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport default authSlice.reducer;\nexport const {\n  reset\n} = authSlice.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","register","thunkAPI","error","response","data","toString","rejectWithValue","login","logout","updateCommunity","userData","console","log","addFriend","ids","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","reducer","actions"],"sources":["/home/andrew/jenso/social-workout-app/frontend2/src/redux/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport authService from './authService'\n\nconst user = JSON.parse(localStorage.getItem('user'))\n\nconst initialState = {\n    user: user ? user : null,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: '',\n}\n\n// Register user\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n    try {\n        return await authService.register(user)\n    } catch (error) {\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\n// Login user\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n    try {\n        return await authService.login(user)\n    } catch (error) {\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\n// Logout\nexport const logout = createAsyncThunk('auth/logout', async () => {\n    await authService.logout()\n})\n\n// Update community \nexport const updateCommunity = createAsyncThunk('auth/community', async (userData, thunkAPI) => {\n    try {\n        console.log(userData)\n        return await authService.updateCommunity(userData)\n    } catch (error) {\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\n// Add friend\nexport const addFriend = createAsyncThunk('/friend/add', async (ids, thunkAPI) => {\n    console.log(ids)\n    try {\n        return await authService.addFriend(ids)\n    } catch (error) {\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        reset: (state) => {\n            state.isLoading = false\n            state.isError = false\n            state.isSuccess = false\n            state.message = ''\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(register.pending, (state) => {\n                state.isLoading = true\n            })\n            .addCase(register.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.user = action.payload\n            })\n            .addCase(register.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n                state.user = null\n            })\n            .addCase(login.pending, (state) => {\n                state.isLoading = true\n            })\n            .addCase(login.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.user = action.payload\n            })\n            .addCase(login.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n                state.user = null\n            })\n            .addCase(updateCommunity.pending, (state) => {\n                state.isLoading = true\n            })\n            .addCase(updateCommunity.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.user = action.payload\n            })\n            .addCase(updateCommunity.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n            .addCase(addFriend.pending, (state) => {\n                state.isLoading = true\n            })\n            .addCase(addFriend.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.user = action.payload\n            })\n            .addCase(addFriend.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n    }\n})\n\nexport default authSlice.reducer\nexport const { reset } = authSlice.actions\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/andrew/jenso/social-workout-app/frontend2/src/components/Leaderboard.js\",\n    _s = $RefreshSig$();\n\nimport { ConstructionOutlined } from '@mui/icons-material';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport FriendList from './FriendList';\nimport Navbar from './Navbar';\nimport LeaderboardUser from './LeaderboardUser';\nimport { Box, Switch, FormControlLabel } from '@mui/material';\nimport '../css/leaderboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Leaderboard() {\n  _s();\n\n  const userCommunityId = useSelector(state => state.auth.user.community);\n  const [userArray, setUserArray] = useState([]);\n  const [leaderboardMode, setLeaderboardMode] = useState('community'); // also want to update whenever socket changes, as well as friends sidebar\n\n  useEffect(() => {\n    fetch(`/api/workouts/program/${userCommunityId}/members`).then(res => res.json()).then(data => {\n      // all we can do here is sort, no logic can be added\n      const sortedData = data.sort((a, b) => a.streak - b.streak);\n      setUserArray(sortedData);\n    });\n  }, []);\n  let rank = 0;\n  const streakArray = []; // needs to change/update whenever socket updates (DB changes)\n  // This is for community user\n\n  const tableElements = userArray.map((user, index) => {\n    const {\n      username,\n      community,\n      profilePic,\n      streak,\n      joinedCommunityDate\n    } = user;\n\n    if (user.streak != streakArray[streakArray.length - 1]) {\n      rank += 1;\n    }\n\n    streakArray.push(user.streak);\n    return /*#__PURE__*/_jsxDEV(LeaderboardUser, {\n      rank: rank,\n      joinDate: joinedCommunityDate,\n      name: username,\n      communityId: community,\n      profilePic: profilePic,\n      streak: streak\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  });\n\n  function changeLeaderboardMode() {\n    setLeaderboardMode(prevState => {\n      if (prevState == 'community') {\n        return 'friends';\n      } else if (prevState == 'friends') {\n        return 'community';\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"two-column-container\",\n      children: [/*#__PURE__*/_jsxDEV(FriendList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            label: \"Friend Mode\",\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              onChange: changeLeaderboardMode,\n              value: leaderboardMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            border: '1px solid black'\n          },\n          className: \"leaderboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Streak\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Member Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Community Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tableElements\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Leaderboard, \"fmhlSXw6XODfLfwIgFfH9fEwjn0=\", false, function () {\n  return [useSelector];\n});\n\n_c = Leaderboard;\nexport default Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["ConstructionOutlined","React","useEffect","useState","useSelector","FriendList","Navbar","LeaderboardUser","Box","Switch","FormControlLabel","Leaderboard","userCommunityId","state","auth","user","community","userArray","setUserArray","leaderboardMode","setLeaderboardMode","fetch","then","res","json","data","sortedData","sort","a","b","streak","rank","streakArray","tableElements","map","index","username","profilePic","joinedCommunityDate","length","push","changeLeaderboardMode","prevState","border"],"sources":["/home/andrew/jenso/social-workout-app/frontend2/src/components/Leaderboard.js"],"sourcesContent":["import { ConstructionOutlined } from '@mui/icons-material'\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport FriendList from './FriendList'\nimport Navbar from './Navbar'\nimport LeaderboardUser from './LeaderboardUser'\nimport { Box, Switch, FormControlLabel } from '@mui/material'\nimport '../css/leaderboard.css'\n\nfunction Leaderboard() {\n\n    const userCommunityId = useSelector(state => state.auth.user.community)\n    const [userArray, setUserArray] = useState([])\n    const [leaderboardMode, setLeaderboardMode] = useState('community')\n\n    // also want to update whenever socket changes, as well as friends sidebar\n    useEffect(() => {\n        fetch(`/api/workouts/program/${userCommunityId}/members`)\n            .then(res => res.json())\n            .then(data => {\n                // all we can do here is sort, no logic can be added\n                const sortedData = data.sort((a, b) => a.streak - b.streak)\n                setUserArray(sortedData)\n            })\n    }, [])\n\n    let rank = 0\n    const streakArray = []\n\n    // needs to change/update whenever socket updates (DB changes)\n    // This is for community user\n    const tableElements = userArray.map((user, index) => {\n        const { username, community, profilePic, streak, joinedCommunityDate } = user\n        if (user.streak != streakArray[streakArray.length - 1]) {\n            rank += 1\n        }\n        streakArray.push(user.streak)\n        return <LeaderboardUser key={index} rank={rank} joinDate={joinedCommunityDate} name={username} communityId={community} profilePic={profilePic} streak={streak}/>\n    })\n\n    function changeLeaderboardMode() {\n        setLeaderboardMode(prevState => {\n            if (prevState == 'community') {\n                return 'friends'\n            } else if (prevState == 'friends') {\n                return 'community'\n            }\n        })\n    }\n\n    return (\n        <div className=\"App\">\n            <Navbar />\n            <div className='two-column-container'>\n                <FriendList />\n                <div className='leaderboard-container'>\n                    <Box>\n                        <FormControlLabel label='Friend Mode' control={<Switch onChange={changeLeaderboardMode} value={leaderboardMode}/>} />\n                    </Box>\n                    <table style={{border: '1px solid black'}} className='leaderboard'>\n                        <thead>\n                            <tr>\n                                <th>Rank</th>\n                                <th>Streak</th>\n                                <th>Member Name</th>\n                                <th>Community Name</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {tableElements}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Leaderboard"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/andrew/jenso/social-workout-app/frontend2/src/components/AddWorkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AddIcon from '@mui/icons-material/Add';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddWorkout(_ref) {\n  _s();\n\n  let {\n    workoutName,\n    programName,\n    test\n  } = _ref;\n  const newExercise = {\n    exerciseName: '',\n    setCount: '',\n    repRange: ''\n  };\n  const [exerciseList, setExerciseList] = useState([]);\n\n  function addExercise() {\n    setExerciseList(prevList => [...prevList, newExercise]);\n  }\n\n  function submitWorkout() {\n    addToServer();\n    setExerciseList([]);\n    test++;\n  }\n\n  function addToServer() {\n    // Adds workout to DB\n    // Automatically adds workout reference to program that is used with programName\n    fetch('/api/workouts/add-workout', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        workoutName,\n        programName,\n        exerciseList\n      })\n    }).then(res => res.json()).then(data => console.log(data));\n  } // PRETTY SIMPLE CHANGE TO AN INSANELY COMPLEX PROBLEM, TOOK ME SO LONG TO SOLVE LETS GOOO\n\n\n  function onChange(e, index) {\n    setExerciseList(prevState => {\n      return prevState.map(exercise => exercise == prevState[index] ? { ...exercise,\n        [e.target.name]: e.target.value\n      } : exercise);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"exercise-table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"# of Sets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rep Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), exerciseList.map((exercise, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: exercise.exerciseName,\n                name: \"exerciseName\",\n                onChange: e => onChange(e, index),\n                placeholder: \"Bench Press\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"1\",\n                max: \"10\",\n                value: exercise.setCount,\n                name: \"setCount\",\n                onChange: e => onChange(e, index),\n                placeholder: \"3\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: exercise.repRange,\n                name: \"repRange\",\n                onChange: e => onChange(e, index),\n                placeholder: \"8-12\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 32\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n      onClick: addExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitWorkout,\n      children: \"Submit Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddWorkout, \"l/86j//pZT2iJnnjdts+9UIT7/I=\");\n\n_c = AddWorkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddWorkout\");","map":{"version":3,"names":["React","useState","AddIcon","useSelector","AddWorkout","workoutName","programName","test","newExercise","exerciseName","setCount","repRange","exerciseList","setExerciseList","addExercise","prevList","submitWorkout","addToServer","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","onChange","e","index","prevState","map","exercise","target","name","value"],"sources":["/home/andrew/jenso/social-workout-app/frontend2/src/components/AddWorkout.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport AddIcon from '@mui/icons-material/Add';\nimport { useSelector } from \"react-redux\";\n\n\nexport default function AddWorkout({ workoutName, programName, test}) {\n\n    const newExercise = {\n        exerciseName: '',\n        setCount: '',\n        repRange: ''\n    }\n\n    const [exerciseList, setExerciseList] = useState([])\n    \n    function addExercise() {\n        setExerciseList(prevList => [\n            ...prevList,\n            newExercise\n        ])\n    }\n\n    function submitWorkout() {\n\n        addToServer()\n\n        setExerciseList([])\n\n        test++\n    }\n\n    function addToServer() {\n\n        // Adds workout to DB\n        // Automatically adds workout reference to program that is used with programName\n        fetch('/api/workouts/add-workout', {\n            method: 'POST',\n            headers: {\n                'Content-Type' : 'application/json'\n            },\n            body: JSON.stringify({\n                workoutName,\n                programName,\n                exerciseList,\n            })\n        })\n            .then(res => res.json())\n            .then(data => console.log(data))\n    }\n\n    // PRETTY SIMPLE CHANGE TO AN INSANELY COMPLEX PROBLEM, TOOK ME SO LONG TO SOLVE LETS GOOO\n    function onChange(e, index) {\n        setExerciseList(prevState => {\n            return prevState.map(exercise => exercise == prevState[index] ? {...exercise, [e.target.name] : e.target.value } : exercise)\n        })\n    }\n\n    return (\n        <>\n            <table className='exercise-table'>\n                <tbody>\n                    <tr>\n                        <th>Exercise</th>\n                        <th># of Sets</th>\n                        <th>Rep Range</th>\n                    </tr>\n                    {/* <NewExercise key={keyId} id={keyId} exerciseInfo={exerciseInfo} handleExerciseInfo={handleExerciseInfo}/> */}\n                    {exerciseList.map((exercise, index) => {\n                        return <tr key={index}>\n                            <td>\n                                <input value={exercise.exerciseName} name='exerciseName' onChange={e => onChange(e, index)} placeholder='Bench Press' required></input>\n                            </td>\n                            <td>\n                                <input type='number' min='1' max='10' value={exercise.setCount} name='setCount' onChange={e => onChange(e, index)} placeholder='3' required></input>\n                            </td>\n                            <td >\n                                <input value={exercise.repRange} name='repRange' onChange={e => onChange(e, index)} placeholder='8-12' required></input>\n                            </td>\n                        </tr>\n                    })}\n                </tbody>\n            </table>\n            <AddIcon onClick={addExercise} />\n            <button onClick={submitWorkout}>Submit Workout</button>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
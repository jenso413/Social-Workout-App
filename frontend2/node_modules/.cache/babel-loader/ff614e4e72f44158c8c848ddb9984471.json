{"ast":null,"code":"var _jsxFileName = \"/home/andrew/jenso/social-workout-app/frontend2/src/components/Exercise.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport '../css/exercise.css';\nimport { logExercise } from '../redux/logWorkoutSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Exercise(_ref) {\n  _s();\n\n  let {\n    exercise,\n    submitWorkout\n  } = _ref;\n  const dispatch = useDispatch();\n  const inputArray = [];\n  const {\n    exerciseName,\n    repRange,\n    setCount\n  } = exercise; // Create x inputs depending on setCount\n\n  for (let i = 0; i < setCount; i++) {\n    const input = /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"reps\",\n      placeholder: repRange,\n      onChange: handleChange,\n      index: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 23\n    }, this);\n\n    inputArray.push(input);\n  }\n\n  const initialExerciseData = {\n    exerciseName,\n    weight: '',\n    reps: Array(inputArray.length).fill(0)\n  };\n  const [exerciseData, setExerciseData] = useState(initialExerciseData);\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    // To ignore first render\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    } else {\n      console.log('hi');\n      dispatch(logExercise(exerciseData));\n    }\n  }, [submitWorkout]);\n\n  function handleChange(e) {\n    switch (e.target.name) {\n      case 'weight':\n        setExerciseData(prevState => ({ ...prevState,\n          weight: parseInt(e.target.value)\n        }));\n        break;\n\n      case 'reps':\n        const inputIndex = e.target.getAttribute('index');\n        setExerciseData(prevState => ({ ...prevState,\n          // Map each rep input to its respective place in the state rep array (maintains order)\n          reps: prevState.reps.map((rep, index) => index == inputIndex ? parseInt(e.target.value) : rep)\n        }));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: exerciseName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"weight\",\n        type: \"number\",\n        onChange: handleChange,\n        value: exerciseData.weight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reps-container\",\n        children: inputArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Exercise, \"sp9pseSFHfVipFLSUxwOfO02J1Q=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Exercise;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exercise\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useDispatch","logExercise","Exercise","exercise","submitWorkout","dispatch","inputArray","exerciseName","repRange","setCount","i","input","handleChange","push","initialExerciseData","weight","reps","Array","length","fill","exerciseData","setExerciseData","isFirstRun","current","console","log","e","target","name","prevState","parseInt","value","inputIndex","getAttribute","map","rep","index"],"sources":["/home/andrew/jenso/social-workout-app/frontend2/src/components/Exercise.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport '../css/exercise.css'\nimport { logExercise } from '../redux/logWorkoutSlice'\n\nexport default function Exercise({ exercise, submitWorkout }) {\n\n    const dispatch = useDispatch()\n    const inputArray = []\n    const { exerciseName, repRange, setCount } = exercise\n\n    // Create x inputs depending on setCount\n    for (let i=0; i < setCount; i++) {\n        const input = <input key={i} type='number' name='reps' placeholder={repRange} onChange={handleChange} index={i}></input>\n        inputArray.push(input)\n    }\n\n    const initialExerciseData = {\n        exerciseName,\n        weight: '',\n        reps: Array(inputArray.length).fill(0)\n    }\n\n    const [exerciseData, setExerciseData] = useState(initialExerciseData)\n\n    const isFirstRun = useRef(true)\n\n    useEffect(() => {\n        // To ignore first render\n        if (isFirstRun.current) {\n            isFirstRun.current = false\n            return\n        } else {\n            console.log('hi')\n            dispatch(logExercise(exerciseData))\n        }\n    }, [submitWorkout])\n\n    function handleChange(e) {\n        switch (e.target.name) {\n            case 'weight' :\n                setExerciseData(prevState => ({\n                    ...prevState,\n                    weight : parseInt(e.target.value)\n                }))\n                break;\n            case 'reps' :\n                const inputIndex = e.target.getAttribute('index')\n                setExerciseData(prevState => ({\n                        ...prevState,\n                        // Map each rep input to its respective place in the state rep array (maintains order)\n                        reps: prevState.reps.map((rep, index) => index == inputIndex ? parseInt(e.target.value) : rep)\n                }))\n        }\n        \n    }\n    \n    return (\n        <tr>\n            <td>{exerciseName}</td>\n            <td>\n                <input name='weight' type='number' onChange={handleChange} value={exerciseData.weight}></input>\n            </td>\n            <td >\n                <div className='reps-container'>\n                    {inputArray}\n                </div>\n            </td>\n        </tr>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
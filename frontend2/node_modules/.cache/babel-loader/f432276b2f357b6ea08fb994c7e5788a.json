{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: '',\n  workoutName: '',\n  workoutId: '',\n  programName: '',\n  exercises: []\n};\nconst logWorkoutSlice = createSlice({\n  name: 'logWorkout',\n  initialState,\n  reducers: {\n    logExercise: (state, action) => {\n      state.exercises.push(action.payload);\n    },\n    logWorkoutData: (state, action) => {\n      state = action.payload;\n    },\n    reset: state => initialState\n  }\n});\nexport default logWorkoutSlice.reducer;\nexport const {\n  logExercise,\n  logWorkoutData,\n  reset\n} = logWorkoutSlice.actions;","map":{"version":3,"sources":["C:/Users/Michael/Documents/100devs/workout-react-app/frontend2/src/redux/logWorkoutSlice.js"],"names":["createSlice","initialState","user","workoutName","workoutId","programName","exercises","logWorkoutSlice","name","reducers","logExercise","state","action","push","payload","logWorkoutData","reset","reducer","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,WAAW,EAAE,EAFI;AAGjBC,EAAAA,SAAS,EAAE,EAHM;AAIjBC,EAAAA,WAAW,EAAE,EAJI;AAKjBC,EAAAA,SAAS,EAAE;AALM,CAArB;AAQA,MAAMC,eAAe,GAAGP,WAAW,CAAC;AAChCQ,EAAAA,IAAI,EAAE,YAD0B;AAEhCP,EAAAA,YAFgC;AAGhCQ,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5BD,MAAAA,KAAK,CAACL,SAAN,CAAgBO,IAAhB,CAAqBD,MAAM,CAACE,OAA5B;AACH,KAHK;AAINC,IAAAA,cAAc,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,GAAGC,MAAM,CAACE,OAAf;AACH,KANK;AAONE,IAAAA,KAAK,EAAGL,KAAD,IAAWV;AAPZ;AAHsB,CAAD,CAAnC;AAcA,eAAeM,eAAe,CAACU,OAA/B;AACA,OAAO,MAAM;AAAEP,EAAAA,WAAF;AAAeK,EAAAA,cAAf;AAA+BC,EAAAA;AAA/B,IAAyCT,eAAe,CAACW,OAA/D","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    user: '',\r\n    workoutName: '',\r\n    workoutId: '',\r\n    programName: '',\r\n    exercises: []\r\n}\r\n\r\nconst logWorkoutSlice = createSlice({\r\n    name: 'logWorkout', \r\n    initialState,\r\n    reducers: {\r\n        logExercise: (state, action) => {\r\n            state.exercises.push(action.payload)\r\n        },\r\n        logWorkoutData: (state, action) => {\r\n            state = action.payload\r\n        },\r\n        reset: (state) => initialState\r\n    }\r\n})\r\n\r\nexport default logWorkoutSlice.reducer\r\nexport const { logExercise, logWorkoutData, reset } = logWorkoutSlice.actions"]},"metadata":{},"sourceType":"module"}
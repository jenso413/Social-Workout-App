{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { useSelector } from \"react-redux\";\nconst initialState = {\n  userId: '',\n  workoutName: '',\n  workoutId: '',\n  programName: '',\n  exercises: []\n};\nexport const logWorkoutToDB = createAsyncThunk('/workout/log', async thunkAPI => {\n  try {\n    fetch('', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify()\n    });\n  } catch (error) {\n    console.log(error);\n  }\n});\nconst logWorkoutSlice = createSlice({\n  name: 'logWorkout',\n  initialState,\n  reducers: {\n    logExercise: (state, action) => {\n      state.exercises.push(action.payload);\n    },\n    logWorkoutData: (state, action) => {\n      state.userId = action.payload.userId;\n      state.workoutName = action.payload.workoutName;\n      state.workoutId = action.payload.workoutId;\n      state.programName = action.payload.programName;\n    },\n    reset: state => initialState\n  }\n});\nexport default logWorkoutSlice.reducer;\nexport const {\n  logExercise,\n  logWorkoutData,\n  reset\n} = logWorkoutSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","useSelector","initialState","userId","workoutName","workoutId","programName","exercises","logWorkoutToDB","thunkAPI","fetch","method","headers","body","JSON","stringify","error","console","log","logWorkoutSlice","name","reducers","logExercise","state","action","push","payload","logWorkoutData","reset","reducer","actions"],"sources":["/home/andrew/jenso/social-workout-app/frontend2/src/redux/logWorkoutSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { useSelector } from \"react-redux\";\n\nconst initialState = {\n    userId: '',\n    workoutName: '',\n    workoutId: '',\n    programName: '',\n    exercises: []\n}\n\nexport const logWorkoutToDB = createAsyncThunk('/workout/log', async (thunkAPI) => {\n    try {   \n        fetch('', {\n            method: 'POST',\n            headers: {\n                'Content-Type' : 'application/json'\n            },\n            body: JSON.stringify()\n        })\n    } catch (error) {\n        console.log(error)\n    }\n})\n\nconst logWorkoutSlice = createSlice({\n    name: 'logWorkout', \n    initialState,\n    reducers: {\n        logExercise: (state, action) => {\n            state.exercises.push(action.payload)\n        },\n        logWorkoutData: (state, action) => {\n            state.userId = action.payload.userId\n            state.workoutName = action.payload.workoutName\n            state.workoutId = action.payload.workoutId\n            state.programName = action.payload.programName\n        },\n        reset: (state) => initialState\n    }\n})\n\nexport default logWorkoutSlice.reducer\nexport const { logExercise, logWorkoutData, reset } = logWorkoutSlice.actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,EADS;EAEjBC,WAAW,EAAE,EAFI;EAGjBC,SAAS,EAAE,EAHM;EAIjBC,WAAW,EAAE,EAJI;EAKjBC,SAAS,EAAE;AALM,CAArB;AAQA,OAAO,MAAMC,cAAc,GAAGT,gBAAgB,CAAC,cAAD,EAAiB,MAAOU,QAAP,IAAoB;EAC/E,IAAI;IACAC,KAAK,CAAC,EAAD,EAAK;MACNC,MAAM,EAAE,MADF;MAENC,OAAO,EAAE;QACL,gBAAiB;MADZ,CAFH;MAKNC,IAAI,EAAEC,IAAI,CAACC,SAAL;IALA,CAAL,CAAL;EAOH,CARD,CAQE,OAAOC,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAZ6C,CAAvC;AAcP,MAAMG,eAAe,GAAGnB,WAAW,CAAC;EAChCoB,IAAI,EAAE,YAD0B;EAEhClB,YAFgC;EAGhCmB,QAAQ,EAAE;IACNC,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC5BD,KAAK,CAAChB,SAAN,CAAgBkB,IAAhB,CAAqBD,MAAM,CAACE,OAA5B;IACH,CAHK;IAINC,cAAc,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAC/BD,KAAK,CAACpB,MAAN,GAAeqB,MAAM,CAACE,OAAP,CAAevB,MAA9B;MACAoB,KAAK,CAACnB,WAAN,GAAoBoB,MAAM,CAACE,OAAP,CAAetB,WAAnC;MACAmB,KAAK,CAAClB,SAAN,GAAkBmB,MAAM,CAACE,OAAP,CAAerB,SAAjC;MACAkB,KAAK,CAACjB,WAAN,GAAoBkB,MAAM,CAACE,OAAP,CAAepB,WAAnC;IACH,CATK;IAUNsB,KAAK,EAAGL,KAAD,IAAWrB;EAVZ;AAHsB,CAAD,CAAnC;AAiBA,eAAeiB,eAAe,CAACU,OAA/B;AACA,OAAO,MAAM;EAAEP,WAAF;EAAeK,cAAf;EAA+BC;AAA/B,IAAyCT,eAAe,CAACW,OAA/D"},"metadata":{},"sourceType":"module"}
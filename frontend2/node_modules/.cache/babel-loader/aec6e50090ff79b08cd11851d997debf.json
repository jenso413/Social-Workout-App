{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\100devs\\\\workout-react-app\\\\frontend2\\\\src\\\\components\\\\AddWorkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport NewExercise from \"./NewExercise\";\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddWorkout() {\n  _s();\n\n  const initialExerciseInfo = {\n    key: null,\n    workoutName: '',\n    setCount: '',\n    repRange: 0\n  };\n  const [keyId, setKeyId] = useState(1);\n  const [workoutName, setWorkoutName] = useState('');\n  const [exerciseList, setExerciseList] = useState([]);\n  const [exerciseInfo, setExerciseInfo] = useState([]);\n\n  function handleExerciseInfo(e) {\n    console.log('hello');\n\n    for (const exercise of exerciseInfo) {\n      console.log('hello');\n\n      if (exercise.key === e.target.id) {\n        console.log('goodbye');\n        setExerciseInfo(prevInfo => [...prevInfo, { ...exercise,\n          [e.target.name]: e.target.value\n        }]);\n      }\n    }\n  }\n\n  function addExercise() {\n    setKeyId(prevKey => prevKey + 1);\n    setExerciseList(prevList => [...prevList, /*#__PURE__*/_jsxDEV(NewExercise, {\n      id: keyId,\n      exerciseInfo: exerciseInfo,\n      handleExerciseInfo: handleExerciseInfo\n    }, keyId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]);\n    setExerciseInfo(prevInfo => [...prevInfo, { ...initialExerciseInfo,\n      key: keyId\n    }]);\n  }\n\n  function handleName(e) {\n    setWorkoutName(e.target.value);\n  }\n\n  function submitWorkout() {\n    fetch('/api/workouts/add-workout', {\n      method: 'POST'\n    }).then(res => res.json()).then(data => console.log(data));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter workout name\",\n      value: workoutName,\n      onChange: handleName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"exercise-table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"# of Sets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rep Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), exerciseList]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n      onClick: addExercise\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitWorkout,\n      children: \"Submit Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddWorkout, \"q71tY4oqN22PvHOfhP+btahmxkE=\");\n\n_c = AddWorkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddWorkout\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/100devs/workout-react-app/frontend2/src/components/AddWorkout.js"],"names":["React","useState","NewExercise","AddIcon","AddWorkout","initialExerciseInfo","key","workoutName","setCount","repRange","keyId","setKeyId","setWorkoutName","exerciseList","setExerciseList","exerciseInfo","setExerciseInfo","handleExerciseInfo","e","console","log","exercise","target","id","prevInfo","name","value","addExercise","prevKey","prevList","handleName","submitWorkout","fetch","method","then","res","json","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEjC,QAAMC,mBAAmB,GAAG;AACxBC,IAAAA,GAAG,EAAE,IADmB;AAExBC,IAAAA,WAAW,EAAE,EAFW;AAGxBC,IAAAA,QAAQ,EAAE,EAHc;AAIxBC,IAAAA,QAAQ,EAAE;AAJc,GAA5B;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcK,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD;;AAEA,WAASgB,kBAAT,CAA4BC,CAA5B,EAA+B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAEA,SAAK,MAAMC,QAAX,IAAuBN,YAAvB,EAAqC;AACjCI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,UAAIC,QAAQ,CAACf,GAAT,KAAiBY,CAAC,CAACI,MAAF,CAASC,EAA9B,EAAkC;AAC9BJ,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAJ,QAAAA,eAAe,CAACQ,QAAQ,IAAI,CACxB,GAAGA,QADqB,EAExB,EACI,GAAGH,QADP;AAEI,WAACH,CAAC,CAACI,MAAF,CAASG,IAAV,GAAkBP,CAAC,CAACI,MAAF,CAASI;AAF/B,SAFwB,CAAb,CAAf;AAOH;AACJ;AACJ;;AAED,WAASC,WAAT,GAAuB;AACnBhB,IAAAA,QAAQ,CAACiB,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAR;AACAd,IAAAA,eAAe,CAACe,QAAQ,IAAI,CACxB,GAAGA,QADqB,eAExB,QAAC,WAAD;AAAyB,MAAA,EAAE,EAAEnB,KAA7B;AAAoC,MAAA,YAAY,EAAEK,YAAlD;AAAgE,MAAA,kBAAkB,EAAEE;AAApF,OAAkBP,KAAlB;AAAA;AAAA;AAAA;AAAA,YAFwB,CAAb,CAAf;AAIAM,IAAAA,eAAe,CAACQ,QAAQ,IAAI,CACxB,GAAGA,QADqB,EAExB,EACI,GAAGnB,mBADP;AAEIC,MAAAA,GAAG,EAAEI;AAFT,KAFwB,CAAb,CAAf;AAOH;;AAED,WAASoB,UAAT,CAAoBZ,CAApB,EAAuB;AACnBN,IAAAA,cAAc,CAACM,CAAC,CAACI,MAAF,CAASI,KAAV,CAAd;AACH;;AAED,WAASK,aAAT,GAAyB;AACrBC,IAAAA,KAAK,CAAC,2BAAD,EAA8B;AAC/BC,MAAAA,MAAM,EAAE;AADuB,KAA9B,CAAL,CAGKC,IAHL,CAGUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHjB,EAIKF,IAJL,CAIUG,IAAI,IAAIlB,OAAO,CAACC,GAAR,CAAYiB,IAAZ,CAJlB;AAKH;;AAED,sBACI;AAAA,4BACI;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAwC,MAAA,KAAK,EAAE9B,WAA/C;AAA4D,MAAA,QAAQ,EAAEuB;AAAtE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAA,6BACI;AAAA,gCACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAOKjB,YAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAaI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEc;AAAlB;AAAA;AAAA;AAAA;AAAA,YAbJ,eAcI;AAAQ,MAAA,OAAO,EAAEI,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA,kBADJ;AAkBH;;GA7EuB3B,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\r\nimport NewExercise from \"./NewExercise\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nexport default function AddWorkout() {\r\n\r\n    const initialExerciseInfo = {\r\n        key: null,\r\n        workoutName: '',\r\n        setCount: '',\r\n        repRange: 0\r\n    }\r\n\r\n    const [keyId, setKeyId] = useState(1)\r\n    const [workoutName, setWorkoutName] = useState('')\r\n    const [exerciseList, setExerciseList] = useState([])\r\n    const [exerciseInfo, setExerciseInfo] = useState([])\r\n\r\n    function handleExerciseInfo(e) {\r\n        console.log('hello')\r\n\r\n        for (const exercise of exerciseInfo) {\r\n            console.log('hello')\r\n            if (exercise.key === e.target.id) {\r\n                console.log('goodbye')\r\n                setExerciseInfo(prevInfo => [\r\n                    ...prevInfo,\r\n                    {\r\n                        ...exercise,\r\n                        [e.target.name] : e.target.value\r\n                    }\r\n                ])\r\n            }\r\n        }\r\n    }\r\n    \r\n    function addExercise() {\r\n        setKeyId(prevKey => prevKey + 1)\r\n        setExerciseList(prevList => [\r\n            ...prevList,\r\n            <NewExercise key={keyId} id={keyId} exerciseInfo={exerciseInfo} handleExerciseInfo={handleExerciseInfo}/>\r\n        ])\r\n        setExerciseInfo(prevInfo => [\r\n            ...prevInfo,\r\n            {\r\n                ...initialExerciseInfo,\r\n                key: keyId\r\n            }\r\n        ])\r\n    }\r\n\r\n    function handleName(e) {\r\n        setWorkoutName(e.target.value)\r\n    }\r\n\r\n    function submitWorkout() {\r\n        fetch('/api/workouts/add-workout', {\r\n            method: 'POST'\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input placeholder='Enter workout name' value={workoutName} onChange={handleName}></input>\r\n            <table className='exercise-table'>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Exercise</th>\r\n                        <th># of Sets</th>\r\n                        <th>Rep Range</th>\r\n                    </tr>\r\n                    {/* <NewExercise key={keyId} id={keyId} exerciseInfo={exerciseInfo} handleExerciseInfo={handleExerciseInfo}/> */}\r\n                    {exerciseList}\r\n                </tbody>\r\n            </table>\r\n            <AddIcon onClick={addExercise} />\r\n            <button onClick={submitWorkout}>Submit Workout</button>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
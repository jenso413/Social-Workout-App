{"ast":null,"code":"var _jsxFileName = \"/home/andrew/jenso/social-workout-app/frontend2/src/components/Logger.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport '../css/logger.css';\nimport LoggerHeader from './LoggerHeader';\nimport AddWorkout from './AddWorkout';\nimport WorkoutTracker from './WorkoutTracker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Logger() {\n  _s();\n\n  const [addWorkout, setAddWorkout] = useState(true);\n  const [workoutName, setWorkoutName] = useState('New Workout');\n  const [programName, setProgramName] = useState('Michael');\n  const [workoutNameList, setWorkoutNameList] = useState([]);\n  const [programData, setProgramData] = useState({});\n  let test = 0;\n  const programId = useSelector(state => state.auth.user.community);\n  const [workout, setWorkout] = useState({});\n\n  function displayAddWorkout() {\n    setAddWorkout(true);\n  }\n\n  function displayLogger() {\n    setAddWorkout(false);\n  }\n\n  function handleWorkoutNameChange(e) {\n    console.log(e);\n  } // On load, get function to populate dropdown with workout names for chosen community\n  // Selected community will be global redux state\n  // Program Name it accepts is actually community\n\n\n  useEffect(() => {\n    console.log(programId);\n    fetch(`/api/workouts/program/${programId}`).then(res => res.json()).then(data => {\n      console.log(data);\n      setProgramData(data);\n      setProgramName(data.programName); // Set into redux state? Or maybe just normal state\n\n      data.workouts.forEach(workout => setWorkoutNameList(prevList => [...prevList, workout.workoutName]));\n    });\n  }, [test]);\n  const name = useSelector(state => state.auth.user); // console.log(name)\n  // console.log(programData)\n  // If the click in loggerHeader matches the workout name, display workout data\n\n  function dropdownClick(e) {\n    console.log(e.target.innerText);\n    const workouts = programData.workouts;\n\n    for (let workout of workouts) {\n      if (workout.workoutName == e.target.innerText) {\n        setWorkout(workout);\n      }\n    }\n\n    setAddWorkout(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(LoggerHeader, {\n      displayAddWorkout: displayAddWorkout,\n      displayLogger: displayLogger,\n      workoutName: workoutName,\n      handleWorkoutNameChange: handleWorkoutNameChange,\n      setWorkoutName: setWorkoutName,\n      programName: programName,\n      workoutNameList: workoutNameList,\n      dropdownClick: dropdownClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), addWorkout ? /*#__PURE__*/_jsxDEV(AddWorkout, {\n      workoutName: workoutName,\n      setWorkoutName: setWorkoutName,\n      programName: programName,\n      test: test\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(WorkoutTracker, {\n      workout: workout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Logger, \"YOGbeHPdxMtlH865pkhB6WWhzXA=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Logger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logger\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","LoggerHeader","AddWorkout","WorkoutTracker","Logger","addWorkout","setAddWorkout","workoutName","setWorkoutName","programName","setProgramName","workoutNameList","setWorkoutNameList","programData","setProgramData","test","programId","state","auth","user","community","workout","setWorkout","displayAddWorkout","displayLogger","handleWorkoutNameChange","e","console","log","fetch","then","res","json","data","workouts","forEach","prevList","name","dropdownClick","target","innerText"],"sources":["/home/andrew/jenso/social-workout-app/frontend2/src/components/Logger.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport '../css/logger.css'\nimport LoggerHeader from './LoggerHeader'\nimport AddWorkout from './AddWorkout'\nimport WorkoutTracker from './WorkoutTracker'\n\nexport default function Logger() {\n\n    const [addWorkout, setAddWorkout] = useState(true)\n    const [workoutName, setWorkoutName] = useState('New Workout')\n    const [programName, setProgramName] = useState('Michael')\n    const [workoutNameList, setWorkoutNameList] = useState([])\n    const [programData, setProgramData] = useState({})\n    let test = 0;\n\n    const programId = useSelector(state => state.auth.user.community)\n\n    const [workout, setWorkout] = useState({})\n\n    function displayAddWorkout() {\n        setAddWorkout(true)\n    }\n\n    function displayLogger() {\n        setAddWorkout(false)\n    }\n\n    function handleWorkoutNameChange(e) {\n        console.log(e)\n    }\n\n    // On load, get function to populate dropdown with workout names for chosen community\n    // Selected community will be global redux state\n    // Program Name it accepts is actually community\n    useEffect(() => {\n        console.log(programId)\n        fetch(`/api/workouts/program/${programId}`)\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                setProgramData(data)\n                setProgramName(data.programName) \n                // Set into redux state? Or maybe just normal state\n                data.workouts.forEach(workout => setWorkoutNameList(prevList => [...prevList, workout.workoutName]))\n            })\n    }, [test])\n\n\n    const name = useSelector(state => state.auth.user)\n    // console.log(name)\n    // console.log(programData)\n\n    // If the click in loggerHeader matches the workout name, display workout data\n    function dropdownClick(e) {\n        console.log(e.target.innerText)\n\n        const workouts = programData.workouts\n\n        for (let workout of workouts) {\n            if (workout.workoutName == e.target.innerText) {\n                setWorkout(workout)\n            }\n        }\n\n        setAddWorkout(false)\n    }\n\n    return (\n        <div className='container'>\n            <LoggerHeader \n                displayAddWorkout={displayAddWorkout}\n                displayLogger={displayLogger}\n                workoutName={workoutName}\n                handleWorkoutNameChange={handleWorkoutNameChange}\n                setWorkoutName={setWorkoutName}\n                programName = {programName}\n                workoutNameList={workoutNameList}\n                dropdownClick={dropdownClick}\n            />\n\n            {addWorkout ? (<AddWorkout workoutName={workoutName} setWorkoutName={setWorkoutName} programName={programName} test={test}/>): \n\n            (<WorkoutTracker workout={workout}/>)}\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/auth/register/'; // Register user\n\nconst register = async userData => {\n  const response = await axios.post(API_URL, userData);\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  } else {\n    console.log('error');\n  }\n\n  return response.data;\n}; // Login user\n\n\nconst login = async userData => {\n  const response = await axios.post(API_URL + 'login', userData);\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  } else {\n    console.log('error');\n  }\n\n  return response.data;\n}; // Logout user \n\n\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\nconst updateCommunity = async userData => {\n  const {\n    userId,\n    programName\n  } = userData;\n  const response = await axios.patch(`/api/auth/user/${userId}`, {\n    programName: programName\n  });\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n    return response.data;\n  } else {\n    console.log('Error, cannot join community');\n  }\n}; // Add friend\n\n\nconst addFriend = async ids => {\n  const {\n    myId,\n    friendId\n  } = ids;\n  const response = await axios.post('/api/auth/friend', {\n    myId,\n    friendId\n  });\n\n  if (response.data) {\n    console.log('successful response');\n  } else {\n    console.log('failure');\n  }\n};\n\nconst authService = {\n  register,\n  updateCommunity,\n  addFriend\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","register","userData","response","post","data","localStorage","setItem","JSON","stringify","console","log","login","logout","removeItem","updateCommunity","userId","programName","patch","addFriend","ids","myId","friendId","authService"],"sources":["/home/andrew/jenso/social-workout-app/frontend2/src/redux/authService.js"],"sourcesContent":["import axios from 'axios'\n\nconst API_URL = '/api/auth/register/'\n\n// Register user\nconst register = async (userData) => {\n\n    const response = await axios.post(API_URL, userData);\n\n    if (response.data) {\n        localStorage.setItem('user', JSON.stringify(response.data))\n    } else {\n        console.log('error') \n    }\n\n    return response.data\n}\n\n// Login user\nconst login = async (userData) => {\n\n    const response = await axios.post(API_URL + 'login', userData);\n\n    if (response.data) {\n        localStorage.setItem('user', JSON.stringify(response.data))\n    } else {\n        console.log('error') \n    }\n\n    return response.data\n}\n\n// Logout user \nconst logout = () => {\n    localStorage.removeItem('user')\n}\n\nconst updateCommunity = async (userData) => {\n\n    const { userId, programName } = userData\n\n    const response = await axios.patch(`/api/auth/user/${userId}`, {programName : programName})\n\n    if (response.data) {\n        localStorage.setItem('user', JSON.stringify(response.data))\n        return response.data\n    } else {\n        console.log('Error, cannot join community')\n    }\n}\n\n// Add friend\nconst addFriend = async (ids) => {\n    const { myId, friendId } = ids\n\n    const response = await axios.post('/api/auth/friend', {myId, friendId})\n\n    if (response.data) {\n        console.log('successful response')\n    } else {\n        console.log('failure')\n    }\n}\n\nconst authService = {\n    register,\n    updateCommunity,\n    addFriend\n}\n\nexport default authService;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,qBAAhB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,MAAOC,QAAP,IAAoB;EAEjC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAWJ,OAAX,EAAoBE,QAApB,CAAvB;;EAEA,IAAIC,QAAQ,CAACE,IAAb,EAAmB;IACfC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACE,IAAxB,CAA7B;EACH,CAFD,MAEO;IACHK,OAAO,CAACC,GAAR,CAAY,OAAZ;EACH;;EAED,OAAOR,QAAQ,CAACE,IAAhB;AACH,CAXD,C,CAaA;;;AACA,MAAMO,KAAK,GAAG,MAAOV,QAAP,IAAoB;EAE9B,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAWJ,OAAO,GAAG,OAArB,EAA8BE,QAA9B,CAAvB;;EAEA,IAAIC,QAAQ,CAACE,IAAb,EAAmB;IACfC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACE,IAAxB,CAA7B;EACH,CAFD,MAEO;IACHK,OAAO,CAACC,GAAR,CAAY,OAAZ;EACH;;EAED,OAAOR,QAAQ,CAACE,IAAhB;AACH,CAXD,C,CAaA;;;AACA,MAAMQ,MAAM,GAAG,MAAM;EACjBP,YAAY,CAACQ,UAAb,CAAwB,MAAxB;AACH,CAFD;;AAIA,MAAMC,eAAe,GAAG,MAAOb,QAAP,IAAoB;EAExC,MAAM;IAAEc,MAAF;IAAUC;EAAV,IAA0Bf,QAAhC;EAEA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACmB,KAAN,CAAa,kBAAiBF,MAAO,EAArC,EAAwC;IAACC,WAAW,EAAGA;EAAf,CAAxC,CAAvB;;EAEA,IAAId,QAAQ,CAACE,IAAb,EAAmB;IACfC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACE,IAAxB,CAA7B;IACA,OAAOF,QAAQ,CAACE,IAAhB;EACH,CAHD,MAGO;IACHK,OAAO,CAACC,GAAR,CAAY,8BAAZ;EACH;AACJ,CAZD,C,CAcA;;;AACA,MAAMQ,SAAS,GAAG,MAAOC,GAAP,IAAe;EAC7B,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAqBF,GAA3B;EAEA,MAAMjB,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAW,kBAAX,EAA+B;IAACiB,IAAD;IAAOC;EAAP,CAA/B,CAAvB;;EAEA,IAAInB,QAAQ,CAACE,IAAb,EAAmB;IACfK,OAAO,CAACC,GAAR,CAAY,qBAAZ;EACH,CAFD,MAEO;IACHD,OAAO,CAACC,GAAR,CAAY,SAAZ;EACH;AACJ,CAVD;;AAYA,MAAMY,WAAW,GAAG;EAChBtB,QADgB;EAEhBc,eAFgB;EAGhBI;AAHgB,CAApB;AAMA,eAAeI,WAAf"},"metadata":{},"sourceType":"module"}
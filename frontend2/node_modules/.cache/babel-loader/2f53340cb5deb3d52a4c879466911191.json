{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\100devs\\\\workout-react-app\\\\frontend2\\\\src\\\\components\\\\Leaderboard.js\",\n    _s = $RefreshSig$();\n\nimport { ConstructionOutlined } from '@mui/icons-material';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport FriendList from './FriendList';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Leaderboard() {\n  _s();\n\n  const userCommunityId = useSelector(state => state.auth.user.community);\n  const [userArray, setUserArray] = useState([]); // also want to update whenever socket changes, as well as friends sidebar\n\n  useEffect(() => {\n    fetch(`/api/workouts/program/${userCommunityId}/members`).then(res => res.json()).then(data => setUserArray(data));\n  }, []);\n  console.log(userArray);\n  const tableElements = true;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(FriendList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          border: '1px solid black'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Member Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Community Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Leaderboard, \"J66hn6gnlmNfuQsxIJ91colvoBg=\", false, function () {\n  return [useSelector];\n});\n\n_c = Leaderboard;\nexport default Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/100devs/workout-react-app/frontend2/src/components/Leaderboard.js"],"names":["ConstructionOutlined","React","useEffect","useState","useSelector","FriendList","Navbar","Leaderboard","userCommunityId","state","auth","user","community","userArray","setUserArray","fetch","then","res","json","data","console","log","tableElements","border"],"mappings":";;;AAAA,SAASA,oBAAT,QAAqC,qBAArC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAEnB,QAAMC,eAAe,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,SAA1B,CAAnC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C,CAHmB,CAKnB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,KAAK,CAAE,yBAAwBP,eAAgB,UAA1C,CAAL,CACKQ,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAIL,YAAY,CAACK,IAAD,CAF9B;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AAEA,QAAMS,aAAa,GAAG,IAAtB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAd;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GArCQhB,W;UAEmBH,W;;;KAFnBG,W;AAuCT,eAAeA,WAAf","sourcesContent":["import { ConstructionOutlined } from '@mui/icons-material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport FriendList from './FriendList'\r\nimport Navbar from './Navbar'\r\n\r\nfunction Leaderboard() {\r\n\r\n    const userCommunityId = useSelector(state => state.auth.user.community)\r\n    const [userArray, setUserArray] = useState([])\r\n\r\n    // also want to update whenever socket changes, as well as friends sidebar\r\n    useEffect(() => {\r\n        fetch(`/api/workouts/program/${userCommunityId}/members`)\r\n            .then(res => res.json())\r\n            .then(data => setUserArray(data))\r\n    }, [])\r\n\r\n    console.log(userArray)\r\n\r\n    const tableElements = true\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar />\r\n            <div className='grid-container'>\r\n                <FriendList />\r\n                <table style={{border: '1px solid black'}}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Rank</th>\r\n                            <th>Member Name</th>\r\n                            <th>Community Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {/* Table rows will be dynamic, add as many as needed: make scrollable as well */}\r\n                    </tbody>\r\n                    \r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Leaderboard"]},"metadata":{},"sourceType":"module"}
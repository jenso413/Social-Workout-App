{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\100devs\\\\workout-react-app\\\\frontend2\\\\src\\\\components\\\\WorkoutTracker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Exercise from './Exercise';\nimport '../css/workoutTracker.css';\nimport { logWorkoutData } from '../redux/logWorkoutSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logWorkoutToDB } from '../redux/logWorkoutSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction WorkoutTracker(_ref) {\n  _s();\n\n  let {\n    workout\n  } = _ref;\n  console.log(workout);\n  const dispatch = useDispatch();\n  const userId = useSelector(state => state.auth.user._id);\n  const loggedWorkout = useSelector(state => state.logWorkout);\n  const {\n    exercises\n  } = workout;\n  const [submitWorkout, setSubmitWorkout] = useState(false); // Exercises is an array of exercise objects\n\n  const exerciseList = exercises.map((exercise, index) => {\n    return /*#__PURE__*/_jsxDEV(Exercise, {\n      exercise: exercise,\n      submitWorkout: submitWorkout\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  });\n\n  function logWorkoutToRedux() {\n    // Tells exercise components to submit their data\n    setSubmitWorkout(true);\n    dispatch(logWorkoutData({\n      workoutName: workout.workoutName,\n      programName: workout.programName,\n      workoutId: workout._id,\n      userId\n    })); // Send redux info to server\n    // const workoutData = useSelector(state => state.logWorkout)\n    // console.log(workoutData)\n  }\n\n  function logWorkoutToDB() {\n    fetch('/api/log-workout/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(loggedWorkout)\n    }).then(res => res.json()).then(data => console.log(data));\n  }\n\n  function countStreak() {\n    // after clicking submit workout, increment streak\n    fetch(`/api/auth/user/${userId}/streak`, {\n      method: 'PATCH'\n    }); // patch request to backend targeting logged in user\n    // increment streak\n    // update display automatically (web socket)\n    // also: polling at 12:00 am every day\n    // if there is not a log from yesterday, streak goes to 0\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"exercise-table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), exerciseList]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logWorkoutToRedux,\n      children: \"Finished Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logWorkoutToDB,\n      children: \"Log Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(WorkoutTracker, \"C5B0gzg4yl2eBz/NwvVC6piNMdE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = WorkoutTracker;\nexport default WorkoutTracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutTracker\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/100devs/workout-react-app/frontend2/src/components/WorkoutTracker.js"],"names":["React","useState","Exercise","logWorkoutData","useDispatch","useSelector","logWorkoutToDB","WorkoutTracker","workout","console","log","dispatch","userId","state","auth","user","_id","loggedWorkout","logWorkout","exercises","submitWorkout","setSubmitWorkout","exerciseList","map","exercise","index","logWorkoutToRedux","workoutName","programName","workoutId","fetch","method","headers","body","JSON","stringify","then","res","json","data","countStreak"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Exercise from './Exercise'\r\nimport '../css/workoutTracker.css'\r\nimport { logWorkoutData } from '../redux/logWorkoutSlice'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logWorkoutToDB } from '../redux/logWorkoutSlice'\r\n\r\nfunction WorkoutTracker({ workout }) {\r\n\r\n    console.log(workout)\r\n    const dispatch = useDispatch()\r\n    const userId = useSelector(state => state.auth.user._id)\r\n    const loggedWorkout = useSelector(state => state.logWorkout)\r\n\r\n    const { exercises } = workout \r\n\r\n    const [submitWorkout, setSubmitWorkout] = useState(false)\r\n\r\n    // Exercises is an array of exercise objects\r\n    const exerciseList = exercises.map((exercise, index) => {\r\n        return <Exercise key={index} exercise={exercise} submitWorkout={submitWorkout} />\r\n    })\r\n\r\n    function logWorkoutToRedux() {\r\n        // Tells exercise components to submit their data\r\n        setSubmitWorkout(true)\r\n\r\n        dispatch(logWorkoutData({\r\n            workoutName : workout.workoutName,\r\n            programName : workout.programName,\r\n            workoutId : workout._id,\r\n            userId,\r\n        }))\r\n\r\n        // Send redux info to server\r\n        // const workoutData = useSelector(state => state.logWorkout)\r\n        // console.log(workoutData)\r\n    }\r\n\r\n    function logWorkoutToDB() {\r\n        fetch('/api/log-workout/', {\r\n            method: 'POST', \r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(loggedWorkout)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    function countStreak() {\r\n        // after clicking submit workout, increment streak\r\n        fetch(`/api/auth/user/${userId}/streak`, {method: 'PATCH'})\r\n        // patch request to backend targeting logged in user\r\n        // increment streak\r\n        // update display automatically (web socket)\r\n\r\n        // also: polling at 12:00 am every day\r\n        // if there is not a log from yesterday, streak goes to 0\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <table className='exercise-table'>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Exercise</th>\r\n                        <th>Weight</th>\r\n                        <th>Reps</th>\r\n                    </tr>\r\n                    {exerciseList}\r\n                </tbody>\r\n            </table>\r\n            <button onClick={logWorkoutToRedux}>Finished Workout</button>\r\n            <button onClick={logWorkoutToDB}>Log Workout</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkoutTracker"]},"metadata":{},"sourceType":"module"}
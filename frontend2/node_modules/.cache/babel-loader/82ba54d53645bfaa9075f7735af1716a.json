{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { postService } from './postService';\n\nconst convertToDate = timestamp => {\n  console.log(timestamp);\n};\n\nconst initialState = {\n  postsArray: [],\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n  message: ''\n};\nexport const createPost = createAsyncThunk('user/posts', async (postData, thunkAPI) => {\n  try {\n    console.log('hi');\n    const token = thunkAPI.getState().auth.user.token;\n    const res = await postService.createPost(postData, token);\n    return res;\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const postSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(createPost.pending, state => {\n      state.isLoading = true;\n    }).addCase(createPost.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      console.log('fulfilled');\n      state.postsArray.push(action.payload);\n    }).addCase(createPost.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport default postSlice.reducer;\nexport const {\n  reset\n} = postSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","postService","convertToDate","timestamp","console","log","initialState","postsArray","isError","isLoading","isSuccess","message","createPost","postData","thunkAPI","token","getState","auth","user","res","error","response","data","toString","rejectWithValue","postSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","push","payload","rejected","reducer","actions"],"sources":["/home/andrew/jenso/social-workout-app/frontend2/src/redux/postSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { postService } from './postService'\n\nconst convertToDate = (timestamp) => {\n    console.log(timestamp)\n}\n\nconst initialState = {\n    postsArray: [],\n    isError: false,\n    isLoading: false,\n    isSuccess: false,\n    message: ''\n}\n\nexport const createPost = createAsyncThunk('user/posts',  async (postData, thunkAPI) => {\n    try {\n        console.log('hi')\n        const token = thunkAPI.getState().auth.user.token\n        const res = await postService.createPost(postData, token)\n        return res\n    } catch (error) {\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\nexport const postSlice = createSlice({\n    name: 'posts',\n    initialState,\n    reducers: {\n        reset: (state) => initialState\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(createPost.pending, (state) => {\n                state.isLoading = true\n            })\n            .addCase(createPost.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                console.log('fulfilled')\n                state.postsArray.push(action.payload)\n            })\n            .addCase(createPost.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n    }\n})\n\nexport default postSlice.reducer\nexport const { reset } = postSlice.actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,aAAa,GAAIC,SAAD,IAAe;EACjCC,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACH,CAFD;;AAIA,MAAMG,YAAY,GAAG;EACjBC,UAAU,EAAE,EADK;EAEjBC,OAAO,EAAE,KAFQ;EAGjBC,SAAS,EAAE,KAHM;EAIjBC,SAAS,EAAE,KAJM;EAKjBC,OAAO,EAAE;AALQ,CAArB;AAQA,OAAO,MAAMC,UAAU,GAAGb,gBAAgB,CAAC,YAAD,EAAgB,OAAOc,QAAP,EAAiBC,QAAjB,KAA8B;EACpF,IAAI;IACAV,OAAO,CAACC,GAAR,CAAY,IAAZ;IACA,MAAMU,KAAK,GAAGD,QAAQ,CAACE,QAAT,GAAoBC,IAApB,CAAyBC,IAAzB,CAA8BH,KAA5C;IACA,MAAMI,GAAG,GAAG,MAAMlB,WAAW,CAACW,UAAZ,CAAuBC,QAAvB,EAAiCE,KAAjC,CAAlB;IACA,OAAOI,GAAP;EACH,CALD,CAKE,OAAOC,KAAP,EAAc;IACZ,MAAMT,OAAO,GAAIS,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,IAAjC,IAAyCF,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBX,OAA9D,IAA0ES,KAAK,CAACT,OAAhF,IAA2FS,KAAK,CAACG,QAAN,EAA3G;IACA,OAAOT,QAAQ,CAACU,eAAT,CAAyBb,OAAzB,CAAP;EACH;AACJ,CAVyC,CAAnC;AAYP,OAAO,MAAMc,SAAS,GAAGzB,WAAW,CAAC;EACjC0B,IAAI,EAAE,OAD2B;EAEjCpB,YAFiC;EAGjCqB,QAAQ,EAAE;IACNC,KAAK,EAAGC,KAAD,IAAWvB;EADZ,CAHuB;EAMjCwB,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CACFC,OADL,CACapB,UAAU,CAACqB,OADxB,EACkCJ,KAAD,IAAW;MACpCA,KAAK,CAACpB,SAAN,GAAkB,IAAlB;IACH,CAHL,EAIKuB,OAJL,CAIapB,UAAU,CAACsB,SAJxB,EAImC,CAACL,KAAD,EAAQM,MAAR,KAAmB;MAC9CN,KAAK,CAACpB,SAAN,GAAkB,KAAlB;MACAoB,KAAK,CAACnB,SAAN,GAAkB,IAAlB;MACAN,OAAO,CAACC,GAAR,CAAY,WAAZ;MACAwB,KAAK,CAACtB,UAAN,CAAiB6B,IAAjB,CAAsBD,MAAM,CAACE,OAA7B;IACH,CATL,EAUKL,OAVL,CAUapB,UAAU,CAAC0B,QAVxB,EAUkC,CAACT,KAAD,EAAQM,MAAR,KAAmB;MAC7CN,KAAK,CAACpB,SAAN,GAAkB,KAAlB;MACAoB,KAAK,CAACrB,OAAN,GAAgB,IAAhB;MACAqB,KAAK,CAAClB,OAAN,GAAgBwB,MAAM,CAACE,OAAvB;IACH,CAdL;EAeH;AAtBgC,CAAD,CAA7B;AAyBP,eAAeZ,SAAS,CAACc,OAAzB;AACA,OAAO,MAAM;EAAEX;AAAF,IAAYH,SAAS,CAACe,OAA5B"},"metadata":{},"sourceType":"module"}
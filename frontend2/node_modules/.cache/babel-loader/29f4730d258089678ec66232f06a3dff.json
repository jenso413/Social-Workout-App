{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\100devs\\\\workout-react-app\\\\frontend2\\\\src\\\\components\\\\LoggerHeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport '../css/loggerHeader.css';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport MenuOption from './MenuOption';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoggerHeader(_ref) {\n  _s();\n\n  let {\n    displayAddWorkout,\n    displayLogger,\n    workoutName,\n    setWorkoutName,\n    programName,\n    workoutNameList,\n    dropdownClick\n  } = _ref;\n  const [toggleDropdown, setToggleDropdown] = useState(false);\n  const [addingWorkout, setAddingWorkout] = useState(true);\n  const displayedOption = useRef();\n\n  function displayOption(e) {\n    setAddingWorkout(false); // Otherwise the DOM doesn't update in time for there to be an innerText value for the nonexistent h1\n\n    setTimeout(() => {\n      displayedOption.current.innerText = e.target.innerText;\n    }, 0);\n  }\n\n  function toggleMenu() {\n    setToggleDropdown(prevState => !prevState);\n  }\n\n  function handleAddWorkoutClick() {\n    setAddingWorkout(true);\n    toggleMenu();\n    displayAddWorkout();\n  }\n\n  console.log(workoutNameList);\n  const menuOptions = workoutNameList.map((workout, index) => {\n    return /*#__PURE__*/_jsxDEV(MenuOption, {\n      name: workout,\n      displayOption: displayOption,\n      toggleMenu: toggleMenu,\n      displayLogger: displayLogger,\n      dropdownClick: dropdownClick\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loggerHeader\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"community-name\",\n      children: programName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `select ${toggleDropdown && 'select-clicked'}`,\n        children: [addingWorkout ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"new-workout-input\",\n          value: workoutName,\n          onChange: e => setWorkoutName(e.target.value),\n          placeholder: \"New Workout\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"selected\",\n          ref: displayedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `caret ${toggleDropdown && 'caret-rotate'}`,\n          style: {\n            fontSize: 40\n          },\n          onClick: () => setToggleDropdown(prevState => !prevState)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: `dropdown-menu ${toggleDropdown && 'menu-open'}`,\n        children: [menuOptions, /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"menu-option\",\n          onClick: handleAddWorkoutClick,\n          children: \"New Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n} //<input value={workoutName} onChange={handleWorkoutNameChange}/> \n// Have an example, starter workout\n// Everyone is part of it at first\n// Called 'IRON Workout'\n\n_s(LoggerHeader, \"+tVgEpjT4fWhSkaCa2NnqJn6tXs=\");\n\n_c = LoggerHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggerHeader\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/100devs/workout-react-app/frontend2/src/components/LoggerHeader.js"],"names":["React","useState","useRef","ArrowDropDownIcon","MenuOption","LoggerHeader","displayAddWorkout","displayLogger","workoutName","setWorkoutName","programName","workoutNameList","dropdownClick","toggleDropdown","setToggleDropdown","addingWorkout","setAddingWorkout","displayedOption","displayOption","e","setTimeout","current","innerText","target","toggleMenu","prevState","handleAddWorkoutClick","console","log","menuOptions","map","workout","index","value","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport '../css/loggerHeader.css'\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport MenuOption from './MenuOption'\r\n\r\nexport default function LoggerHeader({ displayAddWorkout, displayLogger, workoutName, setWorkoutName, programName, workoutNameList, dropdownClick }) {\r\n\r\n    const [toggleDropdown, setToggleDropdown] = useState(false)\r\n    const [addingWorkout, setAddingWorkout] = useState(true)\r\n    const displayedOption = useRef()\r\n    \r\n    function displayOption(e) {\r\n        \r\n        setAddingWorkout(false)\r\n        // Otherwise the DOM doesn't update in time for there to be an innerText value for the nonexistent h1\r\n        setTimeout(() => {\r\n            displayedOption.current.innerText = e.target.innerText\r\n        }, 0);\r\n        \r\n    }\r\n\r\n    function toggleMenu() {\r\n        setToggleDropdown(prevState => !prevState)\r\n    }\r\n\r\n    function handleAddWorkoutClick() {\r\n        \r\n        setAddingWorkout(true)\r\n\r\n        toggleMenu()\r\n\r\n        displayAddWorkout()\r\n        \r\n    }\r\n\r\n    console.log(workoutNameList)\r\n    const menuOptions = workoutNameList.map((workout, index) => {\r\n        return <MenuOption key={index} name={workout} displayOption={displayOption} toggleMenu={toggleMenu} displayLogger={displayLogger} dropdownClick={dropdownClick}/>\r\n    })\r\n\r\n\r\n    return (\r\n        <div className='loggerHeader'>\r\n            <h1 className='community-name'>{programName}</h1>\r\n            <div className='dropdown'>\r\n                <div className={`select ${toggleDropdown && 'select-clicked'}`}>\r\n                    {addingWorkout ? \r\n                        (<input className='new-workout-input' value={workoutName} onChange={(e) => setWorkoutName(e.target.value)} placeholder='New Workout' autoFocus />)\r\n                        : \r\n                        (<h1 className='selected' ref={displayedOption}></h1>)}\r\n                    \r\n                    {/* <ArrowDropDownIcon className={`caret ${toggleDropdown && 'caret-rotate'}`} style={{fontSize: 40}} onClick={() => setToggleDropdown(prevState => !prevState)}/> */}\r\n                    <div className={`caret ${toggleDropdown && 'caret-rotate'}`} style={{fontSize: 40}} onClick={() => setToggleDropdown(prevState => !prevState)}></div>\r\n                </div>\r\n                <ul className={`dropdown-menu ${toggleDropdown && 'menu-open'}`}>                    \r\n                    {menuOptions}\r\n                    <li className='menu-option' onClick={handleAddWorkoutClick}>New Workout</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//<input value={workoutName} onChange={handleWorkoutNameChange}/> \r\n\r\n// Have an example, starter workout\r\n        // Everyone is part of it at first\r\n        // Called 'IRON Workout'"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/andrew/jenso/social-workout-app/frontend2/src/components/MainFeed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MakePost from './MakePost';\nimport '../css/mainfeed.css';\nimport Post from './Post';\nimport { Box, Switch, FormControlLabel } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost } from '../redux/postSlice';\nimport socket from '../sockets/friendSocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainFeed() {\n  _s();\n\n  const dispatch = useDispatch();\n  const id = useSelector(state => state.auth.user._id);\n  const [postsArray, setPostsArray] = useState([]);\n  const [postInfo, setPostInfo] = useState(''); // Should default to false, but my function doesn't detect the state change right away\n\n  const [switchStatus, setSwitchStatus] = useState(true);\n  useEffect(() => {\n    fetch(`/api/posts/${id}`).then(res => res.json()).then(data => {\n      setPostsArray(data);\n      console.log(data);\n    });\n  }, []);\n  useEffect(() => {\n    socket.on('received-post', () => {\n      fetch(`/api/posts/${id}`).then(res => res.json()).then(data => {\n        setPostsArray(data);\n        console.log(data);\n      });\n    });\n  }, [socket]);\n\n  function socketPost() {\n    dispatch(createPost(postInfo));\n    setPostInfo('');\n    socket.emit('make-post');\n  } // Set input content to current input value\n\n\n  function handleInput(e) {\n    setPostInfo(e.target.value);\n  }\n\n  const postElements = postsArray.map((post, index) => {\n    // console.log(post)\n    const date = post.createdAt.toString().slice(0, 10);\n    return /*#__PURE__*/_jsxDEV(Post, {\n      textContent: post.content,\n      date: date,\n      username: post.username\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  });\n\n  function changeFeed() {\n    setSwitchStatus(prevStatus => !prevStatus);\n\n    if (switchStatus) {\n      fetch('/api/posts/').then(res => res.json()).then(data => {\n        setPostsArray(data);\n        console.log(data);\n        console.log('discovering');\n      });\n    } else {\n      fetch(`/api/posts/${id}`).then(res => res.json()).then(data => {\n        setPostsArray(data);\n        console.log(data);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(MakePost // changed from handleClick to test\n    , {\n      handleClick: socketPost,\n      handleInput: handleInput,\n      postInfo: postInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: \"Discover\",\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          onChange: changeFeed,\n          value: switchStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), postElements.reverse()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n} // How does socket.io work?\n// You can listen for events, and emit events\n// Anyone listening for a specific event will get it when it is emitted\n// Create event to emit message\n// Also add listener for emissions\n\n_s(MainFeed, \"Ycxq8gHFbcwADmuET/0KKaeqQMI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MainFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainFeed\");","map":{"version":3,"names":["React","useEffect","useState","MakePost","Post","Box","Switch","FormControlLabel","useDispatch","useSelector","createPost","socket","MainFeed","dispatch","id","state","auth","user","_id","postsArray","setPostsArray","postInfo","setPostInfo","switchStatus","setSwitchStatus","fetch","then","res","json","data","console","log","on","socketPost","emit","handleInput","e","target","value","postElements","map","post","index","date","createdAt","toString","slice","content","username","changeFeed","prevStatus","reverse"],"sources":["/home/andrew/jenso/social-workout-app/frontend2/src/components/MainFeed.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport MakePost from './MakePost'\nimport '../css/mainfeed.css'\nimport Post from './Post'\nimport { Box, Switch, FormControlLabel } from '@mui/material'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createPost } from '../redux/postSlice'\nimport socket from '../sockets/friendSocket'\n\nexport default function MainFeed() {\n\n    const dispatch = useDispatch()\n    const id = useSelector(state => state.auth.user._id)\n    const [postsArray, setPostsArray] = useState([])\n    const [postInfo, setPostInfo] = useState('')\n\n    // Should default to false, but my function doesn't detect the state change right away\n    const [switchStatus, setSwitchStatus] = useState(true)\n\n    useEffect(() => {\n        fetch(`/api/posts/${id}`)\n            .then(res => res.json())\n            .then(data => {\n                setPostsArray(data)\n                console.log(data)\n            })\n    }, [])\n\n    useEffect(() => {\n        socket.on('received-post', () => {\n            fetch(`/api/posts/${id}`)\n                .then(res => res.json())\n                .then(data => {\n                    setPostsArray(data)\n                    console.log(data)\n                })\n        })\n    }, [socket])\n\n    function socketPost() {\n        dispatch(createPost(postInfo))\n        \n        setPostInfo('')\n\n        socket.emit('make-post')\n    }\n\n    // Set input content to current input value\n    function handleInput(e) {\n        setPostInfo(e.target.value)\n    }\n\n\n    const postElements = postsArray.map((post, index) => {\n\n        // console.log(post)\n        const date = post.createdAt.toString().slice(0, 10);\n\n        return <Post\n            textContent={post.content}\n            date={date}\n            username={post.username}\n            key={index}\n        />\n    })\n\n    function changeFeed() {\n        setSwitchStatus(prevStatus => !prevStatus)\n\n        if (switchStatus) {\n            fetch('/api/posts/')\n                .then(res => res.json())\n                .then(data => {\n                    setPostsArray(data)\n                    console.log(data)\n                    console.log('discovering')\n                })\n        } else {\n            fetch(`/api/posts/${id}`)\n                .then(res => res.json())\n                .then(data => {\n                    setPostsArray(data)\n                    console.log(data)\n                })\n        }\n    }\n    \n    return (\n        <main className='feed'>\n            <MakePost \n                // changed from handleClick to test\n                handleClick= {socketPost}\n                handleInput= {handleInput}\n                postInfo = {postInfo}\n            />\n            <Box>\n                <FormControlLabel label='Discover' control={<Switch onChange={changeFeed} value={switchStatus}/>} />\n            </Box>\n            {postElements.reverse()}\n        </main>\n    )\n}\n\n// How does socket.io work?\n// You can listen for events, and emit events\n\n// Anyone listening for a specific event will get it when it is emitted\n\n// Create event to emit message\n// Also add listener for emissions"],"mappings":"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"},"metadata":{},"sourceType":"module"}
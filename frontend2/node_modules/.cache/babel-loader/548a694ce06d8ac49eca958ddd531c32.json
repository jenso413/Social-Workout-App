{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\100devs\\\\workout-react-app\\\\frontend2\\\\src\\\\components\\\\LoggerHeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport '../css/loggerHeader.css';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport MenuOption from './MenuOption';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoggerHeader(_ref) {\n  _s();\n\n  let {\n    displayAddWorkout,\n    displayLogger,\n    workoutName,\n    handleWorkoutNameChange,\n    setWorkoutName\n  } = _ref;\n  const [toggleDropdown, setToggleDropdown] = useState(false);\n  const [addingWorkout, setAddingWorkout] = useState(true);\n  const displayedOption = useRef(); // useEffect(() => {\n  //     console.log(displayedOption)\n  // }, [addingWorkout])\n\n  function displayOption(e) {\n    setAddingWorkout(false);\n    displayedOption.current.innerText = e.target.innerText;\n  }\n\n  function toggleMenu() {\n    setToggleDropdown(prevState => !prevState);\n  }\n\n  function handleAddWorkoutClick() {\n    // Clear previous text\n    displayedOption.current.innerText = ''; // Display an input as the value for the h1\n    // displayedOption.current.innerHTML = some kind of input\n    // toggle addingWorkout state\n    // setState is async, could be a problem? probably not\n    // displayOption(e)\n    // displayAddWorkout()\n\n    setAddingWorkout(true);\n    toggleMenu();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loggerHeader\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `select ${toggleDropdown && 'select-clicked'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"selected\",\n          ref: displayedOption,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"test\",\n              children: addingWorkout && /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"new-workout-input\",\n                value: workoutName,\n                onChange: e => setWorkoutName(e.target.value),\n                placeholder: 'New Workout'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {\n          className: `caret ${toggleDropdown && 'caret-rotate'}`,\n          style: {\n            fontSize: 40\n          },\n          onClick: () => setToggleDropdown(prevState => !prevState)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: `dropdown-menu ${toggleDropdown && 'menu-open'}`,\n        children: [/*#__PURE__*/_jsxDEV(MenuOption, {\n          name: \"Michael's Workout\",\n          displayOption: displayOption,\n          toggleMenu: toggleMenu,\n          displayLogger: displayLogger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuOption, {\n          name: \"Wendler's 5/3/1\",\n          displayOption: displayOption,\n          toggleMenu: toggleMenu,\n          displayLogger: displayLogger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuOption, {\n          name: \"NSuns\",\n          displayOption: displayOption,\n          toggleMenu: toggleMenu,\n          displayLogger: displayLogger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"menu-option\",\n          onClick: handleAddWorkoutClick,\n          children: \"New Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n} //<input value={workoutName} onChange={handleWorkoutNameChange}/> \n// Have an example, starter workout\n// Everyone is part of it at first\n// Called 'IRON Workout'\n\n_s(LoggerHeader, \"+tVgEpjT4fWhSkaCa2NnqJn6tXs=\");\n\n_c = LoggerHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggerHeader\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/100devs/workout-react-app/frontend2/src/components/LoggerHeader.js"],"names":["React","useEffect","useState","useRef","ArrowDropDownIcon","MenuOption","LoggerHeader","displayAddWorkout","displayLogger","workoutName","handleWorkoutNameChange","setWorkoutName","toggleDropdown","setToggleDropdown","addingWorkout","setAddingWorkout","displayedOption","displayOption","e","current","innerText","target","toggleMenu","prevState","handleAddWorkoutClick","value","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport '../css/loggerHeader.css'\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport MenuOption from './MenuOption'\r\n\r\nexport default function LoggerHeader({ displayAddWorkout, displayLogger, workoutName, handleWorkoutNameChange, setWorkoutName }) {\r\n\r\n    const [toggleDropdown, setToggleDropdown] = useState(false)\r\n    const [addingWorkout, setAddingWorkout] = useState(true)\r\n    const displayedOption = useRef()\r\n\r\n    // useEffect(() => {\r\n    //     console.log(displayedOption)\r\n    // }, [addingWorkout])\r\n    \r\n\r\n    function displayOption(e) {\r\n        setAddingWorkout(false)\r\n        displayedOption.current.innerText = e.target.innerText\r\n    }\r\n\r\n    function toggleMenu() {\r\n        setToggleDropdown(prevState => !prevState)\r\n    }\r\n\r\n    function handleAddWorkoutClick() {\r\n\r\n        // Clear previous text\r\n        displayedOption.current.innerText = ''\r\n\r\n        // Display an input as the value for the h1\r\n        // displayedOption.current.innerHTML = some kind of input\r\n        // toggle addingWorkout state\r\n\r\n        // setState is async, could be a problem? probably not\r\n        \r\n        // displayOption(e)\r\n        // displayAddWorkout()\r\n    \r\n        setAddingWorkout(true)\r\n\r\n        toggleMenu()\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className='loggerHeader'>\r\n            <div className='dropdown'>\r\n                <div className={`select ${toggleDropdown && 'select-clicked'}`}>\r\n                    <h1 className='selected' ref={displayedOption}>\r\n                        <div>\r\n                            <div className='test'>\r\n                                {addingWorkout && <input className='new-workout-input' value={workoutName} onChange={(e) => setWorkoutName(e.target.value)} placeholder={'New Workout'} />}\r\n                            </div>\r\n                        </div>\r\n                    </h1>\r\n                    <ArrowDropDownIcon className={`caret ${toggleDropdown && 'caret-rotate'}`} style={{fontSize: 40}} onClick={() => setToggleDropdown(prevState => !prevState)}/>\r\n                </div>\r\n                <ul className={`dropdown-menu ${toggleDropdown && 'menu-open'}`}>\r\n                    {/* <MenuOptions className='menu-option' name='NSuns' onClick={() => setToggleDropdown(prevState => !prevState)}/> */}\r\n                    <MenuOption name=\"Michael's Workout\" displayOption={displayOption} toggleMenu={toggleMenu} displayLogger={displayLogger}/>\r\n                    <MenuOption name=\"Wendler's 5/3/1\" displayOption={displayOption} toggleMenu={toggleMenu} displayLogger={displayLogger}/>\r\n                    <MenuOption name=\"NSuns\" displayOption={displayOption} toggleMenu={toggleMenu} displayLogger={displayLogger}/>\r\n                    <li className='menu-option' onClick={handleAddWorkoutClick}>New Workout</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//<input value={workoutName} onChange={handleWorkoutNameChange}/> \r\n\r\n// Have an example, starter workout\r\n        // Everyone is part of it at first\r\n        // Called 'IRON Workout'"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nconst API_URL = '/api/auth/'; // Register user\n\nconst register = async userData => {\n  const response = await axios.post(API_URL + 'register', userData);\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  } else {\n    console.log('error');\n  }\n\n  return response.data;\n}; // Login user\n\n\nconst login = async userData => {\n  const response = await axios.post(API_URL + 'login', userData);\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n    console.log(response.data);\n  } else {\n    console.log('error');\n  }\n\n  return response.data;\n}; // // Logout user \n// const logout = () => {\n//     localStorage.removeItem('user')\n// }\n\n\nconst updateCommunity = async userData => {\n  const {\n    userId,\n    programName\n  } = userData;\n  const response = await axios.patch(`/api/auth/user/${userId}`, {\n    programName: programName\n  });\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n    return response.data;\n  } else {\n    console.log('Error, cannot join community');\n  }\n}; // Add friend\n\n\nconst addFriend = async ids => {\n  const {\n    myId,\n    friendId\n  } = ids;\n  const response = await axios.post('/api/auth/friend', {\n    myId,\n    friendId\n  });\n\n  if (response.data) {\n    console.log('successful response');\n  } else {\n    console.log('failure');\n  }\n};\n\nconst authService = {\n  register,\n  updateCommunity,\n  addFriend,\n  login\n};\nexport default authService;","map":{"version":3,"sources":["C:/Users/Michael/Documents/100devs/workout-react-app/frontend2/src/redux/authService.js"],"names":["axios","useNavigate","API_URL","register","userData","response","post","data","localStorage","setItem","JSON","stringify","console","log","login","updateCommunity","userId","programName","patch","addFriend","ids","myId","friendId","authService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,OAAO,GAAG,YAAhB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AAEjC,QAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAN,CAAWJ,OAAO,GAAG,UAArB,EAAiCE,QAAjC,CAAvB;;AAEA,MAAIC,QAAQ,CAACE,IAAb,EAAmB;AACfC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACE,IAAxB,CAA7B;AACH,GAFD,MAEO;AACHK,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AAED,SAAOR,QAAQ,CAACE,IAAhB;AACH,CAXD,C,CAaA;;;AACA,MAAMO,KAAK,GAAG,MAAOV,QAAP,IAAoB;AAE9B,QAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAN,CAAWJ,OAAO,GAAG,OAArB,EAA8BE,QAA9B,CAAvB;;AAEA,MAAIC,QAAQ,CAACE,IAAb,EAAmB;AACfC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACE,IAAxB,CAA7B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACE,IAArB;AACH,GAHD,MAGO;AACHK,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AAED,SAAOR,QAAQ,CAACE,IAAhB;AACH,CAZD,C,CAcA;AACA;AACA;AACA;;;AAEA,MAAMQ,eAAe,GAAG,MAAOX,QAAP,IAAoB;AAExC,QAAM;AAAEY,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA0Bb,QAAhC;AAEA,QAAMC,QAAQ,GAAG,MAAML,KAAK,CAACkB,KAAN,CAAa,kBAAiBF,MAAO,EAArC,EAAwC;AAACC,IAAAA,WAAW,EAAGA;AAAf,GAAxC,CAAvB;;AAEA,MAAIZ,QAAQ,CAACE,IAAb,EAAmB;AACfC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACE,IAAxB,CAA7B;AACA,WAAOF,QAAQ,CAACE,IAAhB;AACH,GAHD,MAGO;AACHK,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH;AACJ,CAZD,C,CAcA;;;AACA,MAAMM,SAAS,GAAG,MAAOC,GAAP,IAAe;AAC7B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBF,GAA3B;AAEA,QAAMf,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAN,CAAW,kBAAX,EAA+B;AAACe,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAA/B,CAAvB;;AAEA,MAAIjB,QAAQ,CAACE,IAAb,EAAmB;AACfK,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,GAFD,MAEO;AACHD,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AACJ,CAVD;;AAYA,MAAMU,WAAW,GAAG;AAChBpB,EAAAA,QADgB;AAEhBY,EAAAA,eAFgB;AAGhBI,EAAAA,SAHgB;AAIhBL,EAAAA;AAJgB,CAApB;AAOA,eAAeS,WAAf","sourcesContent":["import axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst API_URL = '/api/auth/'\r\n\r\n// Register user\r\nconst register = async (userData) => {\r\n\r\n    const response = await axios.post(API_URL + 'register', userData);\r\n\r\n    if (response.data) {\r\n        localStorage.setItem('user', JSON.stringify(response.data))\r\n    } else {\r\n        console.log('error') \r\n    }\r\n\r\n    return response.data\r\n}\r\n\r\n// Login user\r\nconst login = async (userData) => {\r\n\r\n    const response = await axios.post(API_URL + 'login', userData);\r\n\r\n    if (response.data) {\r\n        localStorage.setItem('user', JSON.stringify(response.data))\r\n        console.log(response.data)\r\n    } else {\r\n        console.log('error') \r\n    }\r\n\r\n    return response.data\r\n}\r\n\r\n// // Logout user \r\n// const logout = () => {\r\n//     localStorage.removeItem('user')\r\n// }\r\n\r\nconst updateCommunity = async (userData) => {\r\n\r\n    const { userId, programName } = userData\r\n\r\n    const response = await axios.patch(`/api/auth/user/${userId}`, {programName : programName})\r\n\r\n    if (response.data) {\r\n        localStorage.setItem('user', JSON.stringify(response.data))\r\n        return response.data\r\n    } else {\r\n        console.log('Error, cannot join community')\r\n    }\r\n}\r\n\r\n// Add friend\r\nconst addFriend = async (ids) => {\r\n    const { myId, friendId } = ids\r\n\r\n    const response = await axios.post('/api/auth/friend', {myId, friendId})\r\n\r\n    if (response.data) {\r\n        console.log('successful response')\r\n    } else {\r\n        console.log('failure')\r\n    }\r\n}\r\n\r\nconst authService = {\r\n    register,\r\n    updateCommunity,\r\n    addFriend,\r\n    login,\r\n}\r\n\r\nexport default authService;"]},"metadata":{},"sourceType":"module"}
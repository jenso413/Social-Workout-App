{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\100devs\\\\workout-react-app\\\\frontend2\\\\src\\\\components\\\\Leaderboard.js\",\n    _s = $RefreshSig$();\n\nimport { ConstructionOutlined } from '@mui/icons-material';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport FriendList from './FriendList';\nimport Navbar from './Navbar';\nimport LeaderboardUser from './LeaderboardUser';\nimport { Box, Switch, FormControlLabel } from '@mui/material';\nimport '../css/leaderboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Leaderboard() {\n  _s();\n\n  const userCommunityId = useSelector(state => state.auth.user.community);\n  const [userArray, setUserArray] = useState([]);\n  const [leaderboardMode, setLeaderboardMode] = useState('community');\n  const userId = useSelector(state => state.auth.user._id);\n  const [tableCommunityElements, setCommunityTableElements] = useState([]);\n  const [tableFriendElements, setFriendTableElements] = useState([]); // also want to update whenever socket changes, as well as friends sidebar\n\n  useEffect(() => {\n    fetch(`/api/workouts/program/${userCommunityId}/members`).then(res => res.json()).then(data => {\n      const sortedCommunityData = data.sort((a, b) => b.streak - a.streak);\n      setCommunityTableElements(createTableElements(sortedCommunityData));\n    });\n    fetch(`/api/auth/friends/${userId}`).then(res => res.json()).then(data => {\n      const sortedFriendData = data.friends.sort((a, b) => b.streak - a.streak);\n      setFriendTableElements(createTableElements(sortedFriendData));\n    });\n  }, [leaderboardMode]);\n  let rank = 0;\n  const streakArray = []; // This is for community user\n\n  const createTableElements = array => array.map((user, index) => {\n    const {\n      username,\n      community,\n      profilePic,\n      streak,\n      joinedCommunityDate\n    } = user;\n    console.log(community);\n\n    if (user.streak != streakArray[streakArray.length - 1]) {\n      rank += 1;\n    }\n\n    streakArray.push(user.streak);\n    const communityId = leaderboardMode == 'community' ? community ? community._id : '' : community;\n    return /*#__PURE__*/_jsxDEV(LeaderboardUser, {\n      rank: rank,\n      leaderboardMode: leaderboardMode,\n      joinDate: joinedCommunityDate,\n      name: username,\n      communityId: communityId,\n      profilePic: profilePic,\n      streak: streak\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }); // This is for user friends\n  // const tableElements2 = userArray.map((user, index) => {\n  //     const { username, community, profilePic, streak, joinedCommunityDate } = user\n  //     if (user.streak != streakArray[streakArray.length - 1]) {\n  //         rank += 1\n  //     }\n  //     streakArray.push(user.streak)\n  //     return <LeaderboardUser key={index} rank={rank} leaderboardMode={leaderboardMode} joinDate={joinedCommunityDate} name={username} communityId={community} profilePic={profilePic} streak={streak}/>\n  // })\n\n\n  function changeLeaderboardMode() {\n    setLeaderboardMode(prevState => {\n      if (prevState == 'community') {\n        return 'friends';\n      } else if (prevState == 'friends') {\n        return 'community';\n      }\n    });\n  }\n\n  console.log(userArray[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(FriendList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            label: \"Friend Mode\",\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              onChange: changeLeaderboardMode,\n              value: leaderboardMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: leaderboardMode == 'community' ? 'Community' : 'Friends'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            border: '1px solid black'\n          },\n          className: \"leaderboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Streak\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: leaderboardMode === 'community' ? 'Member Since' : 'Community'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: leaderboardMode == 'community' ? tableCommunityElements : tableFriendElements\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Leaderboard, \"I6Rq8UdJk4MI5LKi9UEsk1YWgcE=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Leaderboard;\nexport default Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/100devs/workout-react-app/frontend2/src/components/Leaderboard.js"],"names":["ConstructionOutlined","React","useEffect","useState","useSelector","FriendList","Navbar","LeaderboardUser","Box","Switch","FormControlLabel","Leaderboard","userCommunityId","state","auth","user","community","userArray","setUserArray","leaderboardMode","setLeaderboardMode","userId","_id","tableCommunityElements","setCommunityTableElements","tableFriendElements","setFriendTableElements","fetch","then","res","json","data","sortedCommunityData","sort","a","b","streak","createTableElements","sortedFriendData","friends","rank","streakArray","array","map","index","username","profilePic","joinedCommunityDate","console","log","length","push","communityId","changeLeaderboardMode","prevState","border"],"mappings":"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","sourcesContent":["import { ConstructionOutlined } from '@mui/icons-material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport FriendList from './FriendList'\r\nimport Navbar from './Navbar'\r\nimport LeaderboardUser from './LeaderboardUser'\r\nimport { Box, Switch, FormControlLabel } from '@mui/material'\r\nimport '../css/leaderboard.css'\r\n\r\nfunction Leaderboard() {\r\n\r\n    const userCommunityId = useSelector(state => state.auth.user.community)\r\n    const [userArray, setUserArray] = useState([])\r\n    const [leaderboardMode, setLeaderboardMode] = useState('community')\r\n    const userId = useSelector(state => state.auth.user._id)\r\n\r\n    const [tableCommunityElements, setCommunityTableElements] = useState([])\r\n    const [tableFriendElements, setFriendTableElements] = useState([])\r\n\r\n    // also want to update whenever socket changes, as well as friends sidebar\r\n    useEffect(() => {\r\n        fetch(`/api/workouts/program/${userCommunityId}/members`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const sortedCommunityData = data.sort((a, b) => b.streak - a.streak)\r\n                setCommunityTableElements(createTableElements(sortedCommunityData))\r\n            });\r\n\r\n        fetch(`/api/auth/friends/${userId}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const sortedFriendData = data.friends.sort((a, b) => b.streak - a.streak)\r\n                setFriendTableElements(createTableElements(sortedFriendData))\r\n            })\r\n\r\n    }, [leaderboardMode])\r\n\r\n    let rank = 0\r\n    const streakArray = []\r\n\r\n    // This is for community user\r\n    const createTableElements = (array) => array.map((user, index) => {\r\n        const { username, community, profilePic, streak, joinedCommunityDate } = user\r\n        console.log(community)\r\n        if (user.streak != streakArray[streakArray.length - 1]) {\r\n            rank += 1\r\n        }\r\n        streakArray.push(user.streak)\r\n\r\n        const communityId = leaderboardMode == 'community' ? (community ? community._id : '') : community\r\n\r\n        return <LeaderboardUser key={index} rank={rank} leaderboardMode={leaderboardMode} joinDate={joinedCommunityDate} name={username} communityId={communityId} profilePic={profilePic} streak={streak}/>\r\n    })\r\n\r\n    // This is for user friends\r\n    // const tableElements2 = userArray.map((user, index) => {\r\n    //     const { username, community, profilePic, streak, joinedCommunityDate } = user\r\n    //     if (user.streak != streakArray[streakArray.length - 1]) {\r\n    //         rank += 1\r\n    //     }\r\n    //     streakArray.push(user.streak)\r\n    //     return <LeaderboardUser key={index} rank={rank} leaderboardMode={leaderboardMode} joinDate={joinedCommunityDate} name={username} communityId={community} profilePic={profilePic} streak={streak}/>\r\n    // })\r\n\r\n    function changeLeaderboardMode() {\r\n        setLeaderboardMode(prevState => {\r\n            if (prevState == 'community') {\r\n                return 'friends'\r\n            } else if (prevState == 'friends') {\r\n                return 'community'\r\n            }\r\n        })\r\n    }\r\n\r\n    console.log(userArray[0])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar />\r\n            <div className='grid-container'>\r\n                <FriendList />\r\n                <div className='leaderboard-container'>\r\n                    <Box>\r\n                        <FormControlLabel label='Friend Mode' control={<Switch onChange={changeLeaderboardMode} value={leaderboardMode}/>} />\r\n                    </Box>\r\n                    <h1>{leaderboardMode == 'community' ? 'Community' : 'Friends'}</h1>\r\n                    <table style={{border: '1px solid black'}} className='leaderboard'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Rank</th>\r\n                                <th>Streak</th>\r\n                                <th>Username</th>\r\n                                <th>{leaderboardMode === 'community' ? 'Member Since' : 'Community'}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {leaderboardMode == 'community' ? tableCommunityElements : tableFriendElements}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Leaderboard"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\100devs\\\\workout-react-app\\\\frontend2\\\\src\\\\components\\\\LoggerHeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport '../css/loggerHeader.css';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport MenuOption from './MenuOption';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoggerHeader(_ref) {\n  _s();\n\n  let {\n    displayAddWorkout,\n    displayLogger,\n    workoutName,\n    handleWorkoutNameChange\n  } = _ref;\n  const [toggleDropdown, setToggleDropdown] = useState(false);\n  const [addingWorkout, setAddingWorkout] = useState(true);\n  const displayedOption = useRef();\n  useEffect(() => {\n    console.log(displayedOption);\n  }, []);\n\n  function displayOption(e) {\n    console.log(e.target.innerText);\n    console.log(displayedOption.current.innerHTML);\n    setAddingWorkout(false);\n    displayedOption.current.innerText = e.target.innerText;\n  }\n\n  function toggleMenu() {\n    setToggleDropdown(prevState => !prevState);\n  }\n\n  function handleAddWorkoutClick(e) {\n    // Display an input as the value for the h1\n    // displayedOption.current.innerHTML = some kind of input\n    // toggle addingWorkout state\n    setAddingWorkout(true); // displayOption(e)\n    // displayAddWorkout()\n\n    toggleMenu();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loggerHeader\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `select ${toggleDropdown && 'select-clicked'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"selected\",\n          ref: displayedOption,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: addingWorkout && /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-workout-input\",\n              value: \"New Workout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {\n          className: `caret ${toggleDropdown && 'caret-rotate'}`,\n          style: {\n            fontSize: 40\n          },\n          onClick: () => setToggleDropdown(prevState => !prevState)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: `dropdown-menu ${toggleDropdown && 'menu-open'}`,\n        children: [/*#__PURE__*/_jsxDEV(MenuOption, {\n          name: \"Michael's Workout\",\n          displayOption: displayOption,\n          toggleMenu: toggleMenu,\n          displayLogger: displayLogger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuOption, {\n          name: \"Wendler's 5/3/1\",\n          displayOption: displayOption,\n          toggleMenu: toggleMenu,\n          displayLogger: displayLogger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuOption, {\n          name: \"NSuns\",\n          displayOption: displayOption,\n          toggleMenu: toggleMenu,\n          displayLogger: displayLogger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"menu-option\",\n          onClick: e => handleAddWorkoutClick(e),\n          children: \"New Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n} //<input value={workoutName} onChange={handleWorkoutNameChange}/> \n// Have an example, starter workout\n// Everyone is part of it at first\n// Called 'IRON Workout'\n\n_s(LoggerHeader, \"g9RkJIc6zmqh7f7S33GLRWB8NUQ=\");\n\n_c = LoggerHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggerHeader\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/100devs/workout-react-app/frontend2/src/components/LoggerHeader.js"],"names":["React","useEffect","useState","useRef","ArrowDropDownIcon","MenuOption","LoggerHeader","displayAddWorkout","displayLogger","workoutName","handleWorkoutNameChange","toggleDropdown","setToggleDropdown","addingWorkout","setAddingWorkout","displayedOption","console","log","displayOption","e","target","innerText","current","innerHTML","toggleMenu","prevState","handleAddWorkoutClick","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport '../css/loggerHeader.css'\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport MenuOption from './MenuOption'\r\n\r\nexport default function LoggerHeader({ displayAddWorkout, displayLogger, workoutName, handleWorkoutNameChange }) {\r\n\r\n    const [toggleDropdown, setToggleDropdown] = useState(false)\r\n    const [addingWorkout, setAddingWorkout] = useState(true)\r\n    const displayedOption = useRef()\r\n\r\n    useEffect(() => {\r\n        console.log(displayedOption)\r\n    }, [])\r\n    \r\n\r\n    function displayOption(e) {\r\n        console.log(e.target.innerText)\r\n        console.log(displayedOption.current.innerHTML)\r\n        setAddingWorkout(false)\r\n        displayedOption.current.innerText = e.target.innerText\r\n    }\r\n\r\n    function toggleMenu() {\r\n        setToggleDropdown(prevState => !prevState)\r\n    }\r\n\r\n    function handleAddWorkoutClick(e) {\r\n\r\n        // Display an input as the value for the h1\r\n        // displayedOption.current.innerHTML = some kind of input\r\n        // toggle addingWorkout state\r\n        setAddingWorkout(true)\r\n        // displayOption(e)\r\n        // displayAddWorkout()\r\n        toggleMenu()\r\n    }\r\n\r\n    return (\r\n        <div className='loggerHeader'>\r\n            <div className='dropdown'>\r\n                <div className={`select ${toggleDropdown && 'select-clicked'}`}>\r\n                    <h1 className='selected' ref={displayedOption}>\r\n                        <div>\r\n                            {addingWorkout && <input className='new-workout-input' value='New Workout' />}\r\n                        </div>\r\n                    </h1>\r\n                    <ArrowDropDownIcon className={`caret ${toggleDropdown && 'caret-rotate'}`} style={{fontSize: 40}} onClick={() => setToggleDropdown(prevState => !prevState)}/>\r\n                </div>\r\n                <ul className={`dropdown-menu ${toggleDropdown && 'menu-open'}`}>\r\n                    {/* <MenuOptions className='menu-option' name='NSuns' onClick={() => setToggleDropdown(prevState => !prevState)}/> */}\r\n                    <MenuOption name=\"Michael's Workout\" displayOption={displayOption} toggleMenu={toggleMenu} displayLogger={displayLogger}/>\r\n                    <MenuOption name=\"Wendler's 5/3/1\" displayOption={displayOption} toggleMenu={toggleMenu} displayLogger={displayLogger}/>\r\n                    <MenuOption name=\"NSuns\" displayOption={displayOption} toggleMenu={toggleMenu} displayLogger={displayLogger}/>\r\n                    <li className='menu-option' onClick={e => handleAddWorkoutClick(e)}>New Workout</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//<input value={workoutName} onChange={handleWorkoutNameChange}/> \r\n\r\n// Have an example, starter workout\r\n        // Everyone is part of it at first\r\n        // Called 'IRON Workout'"]},"metadata":{},"sourceType":"module"}
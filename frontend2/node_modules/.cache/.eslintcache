[{"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\index.js":"1","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\reportWebVitals.js":"2","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Fitness.js":"3","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Social.js":"4","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\App.js":"5","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\FriendList.js":"6","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Navbar.js":"7","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Logger.js":"8","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\MainFeed.js":"9","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Friend.js":"10","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\FitnessIcons.js":"11","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\SocialIcons.js":"12","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Group.js":"13","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Exercise.js":"14","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Post.js":"15","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\MakePost.js":"16","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\UserAuth.js":"17","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\store.js":"18","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\authSlice.js":"19","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\authService.js":"20","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\postSlice.js":"21","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\postService.js":"22","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\AddWorkout.js":"23","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\NewExercise.js":"24","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\workoutSlice.js":"25","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\programSlice.js":"26","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\JoinCommunity.js":"27","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\MenuOption.js":"28","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\LoggerHeader.js":"29","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\WorkoutTracker.js":"30","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Communities.js":"31","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\CommunitySidebar.js":"32","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Friends.js":"33","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\AddFriend.js":"34","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\logWorkoutSlice.js":"35","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Graph.js":"36","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\UserInfo.js":"37","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\sockets\\friendSocket.js":"38","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Leaderboard.js":"39","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\LeaderboardUser.js":"40"},{"size":1931,"mtime":1655777797913,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":1651017516160,"results":"43","hashOfConfig":"42"},{"size":847,"mtime":1654551684312,"results":"44","hashOfConfig":"42"},{"size":677,"mtime":1654126324547,"results":"45","hashOfConfig":"42"},{"size":559,"mtime":1653700529441,"results":"46","hashOfConfig":"42"},{"size":1360,"mtime":1655777316460,"results":"47","hashOfConfig":"42"},{"size":1475,"mtime":1655411598786,"results":"48","hashOfConfig":"42"},{"size":2937,"mtime":1654557065061,"results":"49","hashOfConfig":"42"},{"size":3234,"mtime":1655585852127,"results":"50","hashOfConfig":"42"},{"size":411,"mtime":1655777386602,"results":"51","hashOfConfig":"42"},{"size":1003,"mtime":1655153540285,"results":"52","hashOfConfig":"42"},{"size":1055,"mtime":1655777811346,"results":"53","hashOfConfig":"42"},{"size":2178,"mtime":1654648593218,"results":"54","hashOfConfig":"42"},{"size":2312,"mtime":1654824560474,"results":"55","hashOfConfig":"42"},{"size":1481,"mtime":1654654289659,"results":"56","hashOfConfig":"42"},{"size":679,"mtime":1655495494450,"results":"57","hashOfConfig":"42"},{"size":5435,"mtime":1655411013828,"results":"58","hashOfConfig":"42"},{"size":530,"mtime":1654820860822,"results":"59","hashOfConfig":"42"},{"size":4618,"mtime":1655411124477,"results":"60","hashOfConfig":"42"},{"size":1614,"mtime":1655411181175,"results":"61","hashOfConfig":"42"},{"size":1677,"mtime":1654565376785,"results":"62","hashOfConfig":"42"},{"size":617,"mtime":1654560973933,"results":"63","hashOfConfig":"42"},{"size":3023,"mtime":1654557060613,"results":"64","hashOfConfig":"42"},{"size":930,"mtime":1653876918840,"results":"65","hashOfConfig":"42"},{"size":579,"mtime":1654820647355,"results":"66","hashOfConfig":"42"},{"size":517,"mtime":1653763479988,"results":"67","hashOfConfig":"42"},{"size":3060,"mtime":1655671055942,"results":"68","hashOfConfig":"42"},{"size":348,"mtime":1654027657801,"results":"69","hashOfConfig":"42"},{"size":2785,"mtime":1654553650607,"results":"70","hashOfConfig":"42"},{"size":2913,"mtime":1655755510255,"results":"71","hashOfConfig":"42"},{"size":1095,"mtime":1654648253031,"results":"72","hashOfConfig":"42"},{"size":548,"mtime":1655154030559,"results":"73","hashOfConfig":"42"},{"size":1853,"mtime":1656005599814,"results":"74","hashOfConfig":"42"},{"size":1001,"mtime":1655585864809,"results":"75","hashOfConfig":"42"},{"size":1257,"mtime":1654892821778,"results":"76","hashOfConfig":"42"},{"size":439,"mtime":1655152196778,"results":"77","hashOfConfig":"42"},{"size":313,"mtime":1655411757387,"results":"78","hashOfConfig":"42"},{"size":112,"mtime":1655497191585,"results":"79","hashOfConfig":"42"},{"size":4461,"mtime":1655996361375,"results":"80","hashOfConfig":"42"},{"size":1814,"mtime":1655996170805,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8oy47k",{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"88"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"88"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"88"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\index.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Fitness.js",["218"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport '../css/fitness.css'\r\nimport Navbar from './Navbar'\r\nimport FriendList from './FriendList'\r\nimport Logger from './Logger'\r\nimport JoinCommunity from './JoinCommunity'\r\n\r\nexport default function Fitness() {\r\n\r\n    const [isInCommunity, setIsInCommunity] = useState()\r\n\r\n    const user = useSelector(state => state.auth.user)\r\n\r\n    useEffect(() => {\r\n        if (user.community) {\r\n            setIsInCommunity(true)\r\n        } else {\r\n            setIsInCommunity(false)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className='main'>\r\n            <Navbar />\r\n            <div className='body'>\r\n                <FriendList />\r\n                {isInCommunity ? <Logger /> : <JoinCommunity />}\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Social.js",["219","220"],[],"import '../css/social.css';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport Navbar from './Navbar'\r\nimport FriendList from './FriendList';\r\nimport CommunitySidebar from './CommunitySidebar';\r\nimport MainFeed from './MainFeed';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction Social() {\r\n\r\n  const { user } = useSelector((state) => state.auth)\r\n\r\n  console.log (user)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <div className='grid-container'>\r\n          <FriendList />\r\n          <MainFeed />\r\n          <CommunitySidebar />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Social;","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\App.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\FriendList.js",["221","222"],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Navbar.js",["223","224","225","226","227","228"],[],"import React, { useEffect, useState } from 'react'\r\nimport '../css/navbar.css'\r\nimport logo from '../assets/default.png'\r\nimport { Avatar, IconButton } from '@mui/material'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport SocialIcons from './SocialIcons';\r\nimport FitnessIcons from './FitnessIcons';\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function Navbar() {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n    const location = useLocation()\r\n    const [navbarStatus, setNavbarStatus] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (location.pathname.includes('fitness')) {\r\n            setNavbarStatus('fitness')\r\n        } else if (location.pathname.includes('social')) {\r\n            setNavbarStatus('social')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <nav>\r\n            <div className='nav__left'>\r\n                <img src={logo} />\r\n            </div>\r\n            <div className='nav__center'>\r\n                {navbarStatus == 'social' && <SocialIcons /> }\r\n                {navbarStatus == 'fitness' && <FitnessIcons /> }\r\n            </div>\r\n            <div className='nav__right'>\r\n                <div className='user__info' onClick={() => navigate('/user')}>\r\n                    <Avatar sx={{ height: 40, width: 40 }} src='' />\r\n                    <h4>{user && user.username}</h4>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Logger.js",["229","230","231"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport '../css/logger.css'\r\nimport LoggerHeader from './LoggerHeader'\r\nimport AddWorkout from './AddWorkout'\r\nimport WorkoutTracker from './WorkoutTracker'\r\n\r\nexport default function Logger() {\r\n\r\n    const [addWorkout, setAddWorkout] = useState(true)\r\n    const [workoutName, setWorkoutName] = useState('New Workout')\r\n    const [programName, setProgramName] = useState('Michael')\r\n    const [workoutNameList, setWorkoutNameList] = useState([])\r\n    const [programData, setProgramData] = useState({})\r\n    let test = 0;\r\n\r\n    const programId = useSelector(state => state.auth.user.community)\r\n\r\n    const [workout, setWorkout] = useState({})\r\n\r\n    function displayAddWorkout() {\r\n        setAddWorkout(true)\r\n    }\r\n\r\n    function displayLogger() {\r\n        setAddWorkout(false)\r\n    }\r\n\r\n    function handleWorkoutNameChange(e) {\r\n        console.log(e)\r\n    }\r\n\r\n    // On load, get function to populate dropdown with workout names for chosen community\r\n    // Selected community will be global redux state\r\n    // Program Name it accepts is actually community\r\n    useEffect(() => {\r\n        console.log(programId)\r\n        fetch(`/api/workouts/program/${programId}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setProgramData(data)\r\n                setProgramName(data.programName) \r\n                // Set into redux state? Or maybe just normal state\r\n                data.workouts.forEach(workout => setWorkoutNameList(prevList => [...prevList, workout.workoutName]))\r\n            })\r\n    }, [test])\r\n\r\n\r\n    const name = useSelector(state => state.auth.user)\r\n    // console.log(name)\r\n    // console.log(programData)\r\n\r\n    // If the click in loggerHeader matches the workout name, display workout data\r\n    function dropdownClick(e) {\r\n        console.log(e.target.innerText)\r\n\r\n        const workouts = programData.workouts\r\n\r\n        for (let workout of workouts) {\r\n            if (workout.workoutName == e.target.innerText) {\r\n                setWorkout(workout)\r\n            }\r\n        }\r\n\r\n        setAddWorkout(false)\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <LoggerHeader \r\n                displayAddWorkout={displayAddWorkout}\r\n                displayLogger={displayLogger}\r\n                workoutName={workoutName}\r\n                handleWorkoutNameChange={handleWorkoutNameChange}\r\n                setWorkoutName={setWorkoutName}\r\n                programName = {programName}\r\n                workoutNameList={workoutNameList}\r\n                dropdownClick={dropdownClick}\r\n            />\r\n\r\n            {addWorkout ? (<AddWorkout workoutName={workoutName} setWorkoutName={setWorkoutName} programName={programName} test={test}/>): \r\n\r\n            (<WorkoutTracker workout={workout}/>)}\r\n        </div>\r\n    )\r\n}","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\MainFeed.js",["232","233"],[],"import React, { useEffect, useState } from 'react'\r\nimport MakePost from './MakePost'\r\nimport '../css/mainfeed.css'\r\nimport Post from './Post'\r\nimport { Box, Switch, FormControlLabel } from '@mui/material'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createPost } from '../redux/postSlice'\r\nimport socket from '../sockets/friendSocket'\r\n\r\nexport default function MainFeed() {\r\n\r\n    const dispatch = useDispatch()\r\n    const id = useSelector(state => state.auth.user._id)\r\n    const [postsArray, setPostsArray] = useState([])\r\n    const [postInfo, setPostInfo] = useState('')\r\n\r\n    // Should default to false, but my function doesn't detect the state change right away\r\n    const [switchStatus, setSwitchStatus] = useState(true)\r\n\r\n    useEffect(() => {\r\n        fetch(`/api/posts/${id}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setPostsArray(data)\r\n                console.log(data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on('received-post', () => {\r\n            fetch(`/api/posts/${id}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setPostsArray(data)\r\n                    console.log(data)\r\n                })\r\n        })\r\n    }, [socket])\r\n\r\n    function socketPost() {\r\n        dispatch(createPost(postInfo))\r\n        \r\n        setPostInfo('')\r\n\r\n        socket.emit('make-post')\r\n    }\r\n\r\n    // Set input content to current input value\r\n    function handleInput(e) {\r\n        setPostInfo(e.target.value)\r\n    }\r\n\r\n\r\n    const postElements = postsArray.map((post, index) => {\r\n\r\n        // console.log(post)\r\n        const date = post.createdAt.toString().slice(0, 10);\r\n\r\n        return <Post\r\n            textContent={post.content}\r\n            date={date}\r\n            username={post.username}\r\n            key={index}\r\n        />\r\n    })\r\n\r\n    function changeFeed() {\r\n        setSwitchStatus(prevStatus => !prevStatus)\r\n\r\n        if (switchStatus) {\r\n            fetch('/api/posts/')\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setPostsArray(data)\r\n                    console.log(data)\r\n                    console.log('discovering')\r\n                })\r\n        } else {\r\n            fetch(`/api/posts/${id}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setPostsArray(data)\r\n                    console.log(data)\r\n                })\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <main className='feed'>\r\n            <MakePost \r\n                // changed from handleClick to test\r\n                handleClick= {socketPost}\r\n                handleInput= {handleInput}\r\n                postInfo = {postInfo}\r\n            />\r\n            <Box>\r\n                <FormControlLabel label='Discover' control={<Switch onChange={changeFeed} value={switchStatus}/>} />\r\n            </Box>\r\n            {postElements.reverse()}\r\n        </main>\r\n    )\r\n}\r\n\r\n// How does socket.io work?\r\n// You can listen for events, and emit events\r\n\r\n// Anyone listening for a specific event will get it when it is emitted\r\n\r\n// Create event to emit message\r\n// Also add listener for emissions","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Friend.js",["234"],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\FitnessIcons.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\SocialIcons.js",["235"],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Group.js",["236"],[],"import React, { useState } from 'react'\r\nimport '../css/group.css'\r\nimport LocalFireDepartmentIcon from '@mui/icons-material/LocalFireDepartment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateCommunity } from '../redux/authSlice';\r\n\r\nexport default function Group({ programName, picture, favColor, wider }) {\r\n    console.log(wider)\r\n    const [displayModal, setDisplayModal] = useState('')\r\n    const userId = useSelector((state) => state.auth.user._id)\r\n    console.log(userId)\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    function joinCommunity() {\r\n        fetch(`/api/auth/user/${userId}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({ programName })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    function handleClick() {\r\n        dispatch(updateCommunity({userId : userId, programName : programName}))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`group__card ${wider ? wider : 'normal-width'}`} onClick={() => {setDisplayModal('active')}} style = {{\r\n                background: `linear-gradient(0deg, rgba(0,0,0,0.80) 0%, rgba(0, 0, 0, 0) 50%, rgba(0,0,0,0.80) 100%), url(${picture})`,\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundSize: 'contain',\r\n                backgroundPosition: 'center'\r\n            }}>\r\n                <span> 13,000 people</span>\r\n                <LocalFireDepartmentIcon className='fire__icon' />\r\n                <h2>{programName}</h2>\r\n                {/* <img src={picture}></img> */}\r\n            </div>\r\n            <div className={`modal-bg ${displayModal}`}>\r\n                <div className='modal-content'>\r\n                    <h1>{programName}</h1>\r\n                    <span> Number of members: 13,000</span>\r\n                    <p>Workouts</p>\r\n                    {/* Maybe on click the join button takes you to workout logger page?  */}\r\n                    <button onClick={handleClick}>Join</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Exercise.js",["237","238","239"],[],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport '../css/exercise.css'\r\nimport { logExercise } from '../redux/logWorkoutSlice'\r\n\r\nexport default function Exercise({ exercise, submitWorkout }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const inputArray = []\r\n    const { exerciseName, repRange, setCount } = exercise\r\n\r\n    // Create x inputs depending on setCount\r\n    for (let i=0; i < setCount; i++) {\r\n        const input = <input key={i} type='number' name='reps' placeholder={repRange} onChange={handleChange} index={i}></input>\r\n        inputArray.push(input)\r\n    }\r\n\r\n    const initialExerciseData = {\r\n        exerciseName,\r\n        weight: '',\r\n        reps: Array(inputArray.length).fill(0)\r\n    }\r\n\r\n    const [exerciseData, setExerciseData] = useState(initialExerciseData)\r\n\r\n    const isFirstRun = useRef(true)\r\n\r\n    useEffect(() => {\r\n        // To ignore first render\r\n        if (isFirstRun.current) {\r\n            isFirstRun.current = false\r\n            return\r\n        } else {\r\n            console.log('hi')\r\n            dispatch(logExercise(exerciseData))\r\n        }\r\n    }, [submitWorkout])\r\n\r\n    function handleChange(e) {\r\n        switch (e.target.name) {\r\n            case 'weight' :\r\n                setExerciseData(prevState => ({\r\n                    ...prevState,\r\n                    weight : parseInt(e.target.value)\r\n                }))\r\n                break;\r\n            case 'reps' :\r\n                const inputIndex = e.target.getAttribute('index')\r\n                setExerciseData(prevState => ({\r\n                        ...prevState,\r\n                        // Map each rep input to its respective place in the state rep array (maintains order)\r\n                        reps: prevState.reps.map((rep, index) => index == inputIndex ? parseInt(e.target.value) : rep)\r\n                }))\r\n        }\r\n        \r\n    }\r\n    \r\n    return (\r\n        <tr>\r\n            <td>{exerciseName}</td>\r\n            <td>\r\n                <input name='weight' type='number' onChange={handleChange} value={exerciseData.weight}></input>\r\n            </td>\r\n            <td >\r\n                <div className='reps-container'>\r\n                    {inputArray}\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Post.js",["240","241","242"],[],"import React from 'react'\r\nimport '../css/post.css'\r\nimport { Avatar, IconButton } from '@mui/material'\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\nimport InsertCommentIcon from '@mui/icons-material/InsertComment';\r\nimport IosShareIcon from '@mui/icons-material/IosShare';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { useSelector } from 'react-redux';\r\n// import { ThumbUpIcon, InsertCommentIcon, IosShareIcon } from '@mui/icons-material'\r\n\r\nexport default function Post({ textContent, date, username }) {\r\n\r\n    return (\r\n        <div className='post__card'>\r\n            <div className='post__top'>\r\n                <Avatar />\r\n                <div className='post__top--text'>\r\n                    <span>{username}</span>\r\n                    <p>{date}</p>\r\n                </div>\r\n                <h3>Community Info</h3>\r\n            </div>\r\n            <p className='post__content'>{textContent}</p>\r\n            <div className='post__interactions'>\r\n                <div className='post__option'>\r\n                    <ThumbUpIcon />\r\n                    <span>Like</span>\r\n                </div>\r\n                <div className='post__option'>\r\n                    <InsertCommentIcon />\r\n                    <span>Comment</span>\r\n                </div>\r\n                <div className='post__option'>\r\n                    <IosShareIcon />\r\n                    <span>Share</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\MakePost.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\UserAuth.js",["243"],[],"import React from 'react'\r\nimport '../css/userAuth.css'\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport { register, reset, login } from '../redux/authSlice'\r\n\r\nexport default function SignUp() {\r\n\r\n    const [isActive, setIsActive] = React.useState(false)\r\n    const [chosenAuth, setChosenAuth] = React.useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const { user, isLoading, isError, isSuccess, message} = useSelector((state) => {\r\n        return state.auth\r\n    })\r\n\r\n    function handleClick(e) {\r\n        \r\n        toggleModal()\r\n\r\n        chooseAuth(e.target.name)\r\n    } \r\n\r\n    function toggleModal() {\r\n        setIsActive(prevState => !prevState)\r\n    }\r\n\r\n    function chooseAuth(name) {\r\n        setChosenAuth(name)\r\n    }\r\n\r\n    function closeModal() {\r\n        toggleModal()\r\n    }\r\n\r\n    // ***** USER AUTH *****\r\n\r\n    const initialFormValue = {\r\n        username : '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n    }\r\n\r\n    const [formData, setFormData] = React.useState(initialFormValue)\r\n\r\n    const { username, email, password, password2 } = formData\r\n\r\n    const [loginInfo, setLoginInfo] = React.useState({username: '', password: ''})\r\n\r\n    useEffect(() => {\r\n        if (isError) {\r\n        toast.error(message)\r\n        }\r\n\r\n        if (user) {\r\n            navigate('/main')\r\n        }\r\n\r\n        // if(isSuccess || user) {\r\n        //   navigate('/social/')\r\n        // }\r\n\r\n        dispatch(reset())\r\n\r\n    }, [user, isError, isSuccess, message, navigate, dispatch])\r\n\r\n    function handleChange(e) {\r\n\r\n        const inputName = e.target.name;\r\n        const inputValue = e.target.value\r\n\r\n        setFormData(prevFormData => ({\r\n            ...prevFormData,\r\n            [inputName] : inputValue\r\n        }))\r\n    }   \r\n\r\n    async function registerNewUser(e) {\r\n        e.preventDefault()\r\n\r\n        if(password !== password2) {\r\n            toast.error('Passwords do not match')\r\n        } else {\r\n            const userData = {\r\n            username,\r\n            email,\r\n            password\r\n            }\r\n\r\n            dispatch(register(userData))\r\n        }\r\n\r\n    }\r\n\r\n    async function loginUser(e) {\r\n        e.preventDefault()\r\n\r\n        dispatch(login(loginInfo))\r\n        // try {\r\n        //     const response = await fetch('/api/auth/login', {\r\n        //         method: 'POST',\r\n        //         headers: {\r\n        //             'Content-Type': 'application/json'\r\n        //         },\r\n        //         body: JSON.stringify(formData)\r\n        //     })\r\n\r\n        //     if(!response.ok) {\r\n        //     throw new Error(`Error! Status: ${response.status}`)\r\n        //     }\r\n\r\n        //     const result = await response.json()\r\n        //     // console.log(result)\r\n\r\n        //     setUserInfo(result)\r\n        //     console.log(result)\r\n        //     navigate('/main')\r\n        //     dispatch(register(userData))\r\n\r\n        // } catch(err) {\r\n        //     console.log(err)\r\n        // }\r\n\r\n        setFormData(initialFormValue)\r\n    }\r\n\r\n    function handleLoginChange(e) {\r\n        setLoginInfo(prevState => ({\r\n            ...prevState,\r\n            [e.target.name] : e.target.value\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className='user-auth'>\r\n            <div className='btn-container'>\r\n                <button className='auth-btn' name='signUp' onClick={handleClick}>Sign Up</button>\r\n                <button className='auth-btn' name='signIn' onClick={handleClick}>Sign In</button>\r\n            </div>\r\n\r\n            <div className={`modal-bg ${isActive ? 'bg-active' : ''}`}>\r\n                \r\n                {chosenAuth === 'signIn'\r\n\r\n                    ? <form className='form'>\r\n                        <CloseIcon className='close-icon' onClick={closeModal}/>\r\n                        <h2>Sign In</h2>\r\n                        <input name='username' value={loginInfo.username} onChange={handleLoginChange} type='text' placeholder='Enter your username'></input>\r\n                        <input name='password' value={loginInfo.password} onChange={handleLoginChange} type='password' placeholder='Enter your password'></input>\r\n                        <button onClick={loginUser}>Submit</button>\r\n                    </form>\r\n        \r\n                    : <form className='form'>\r\n                        <CloseIcon className='close-icon' onClick={closeModal}/>\r\n                        <h2>Sign Up</h2>\r\n                        <input name='username' value={formData.username} onChange={handleChange} type='text' placeholder='Enter a username'></input>\r\n                        <input name='email' value={formData.email} onChange={handleChange} type='email' placeholder='Enter an email'></input>\r\n                        <input name='password' value={formData.password} onChange={handleChange} type='password' placeholder='Enter a password'></input>\r\n                        <input name='password2' value={formData.password2} onChange={handleChange} type='password' placeholder='Confirm Password'></input>\r\n                        <button onClick={registerNewUser}>Submit</button>\r\n                    </form>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\store.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\authSlice.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\authService.js",["244"],[],"import axios from 'axios'\r\n\r\nconst API_URL = '/api/auth/'\r\n\r\n// Register user\r\nconst register = async (userData) => {\r\n\r\n    const response = await axios.post(API_URL + 'register', userData);\r\n\r\n    if (response.data) {\r\n        localStorage.setItem('user', JSON.stringify(response.data))\r\n    } else {\r\n        console.log('error') \r\n    }\r\n\r\n    return response.data\r\n}\r\n\r\n// Login user\r\nconst login = async (userData) => {\r\n\r\n    const response = await axios.post(API_URL + 'login', userData);\r\n\r\n    if (response.data) {\r\n        localStorage.setItem('user', JSON.stringify(response.data))\r\n        console.log(response.data)\r\n    } else {\r\n        console.log('error') \r\n    }\r\n\r\n    return response.data\r\n}\r\n\r\n// Logout user \r\nconst logout = () => {\r\n    localStorage.removeItem('user')\r\n}\r\n\r\nconst updateCommunity = async (userData) => {\r\n\r\n    const { userId, programName } = userData\r\n\r\n    const response = await axios.patch(`/api/auth/user/${userId}`, {programName : programName})\r\n\r\n    if (response.data) {\r\n        localStorage.setItem('user', JSON.stringify(response.data))\r\n        return response.data\r\n    } else {\r\n        console.log('Error, cannot join community')\r\n    }\r\n}\r\n\r\n// Add friend\r\nconst addFriend = async (ids) => {\r\n    const { myId, friendId } = ids\r\n\r\n    const response = await axios.post('/api/auth/friend', {myId, friendId})\r\n\r\n    if (response.data) {\r\n        console.log('successful response')\r\n    } else {\r\n        console.log('failure')\r\n    }\r\n}\r\n\r\nconst authService = {\r\n    register,\r\n    updateCommunity,\r\n    addFriend,\r\n    login\r\n}\r\n\r\nexport default authService;","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\postSlice.js",["245"],[],"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { postService } from './postService'\r\n\r\nconst convertToDate = (timestamp) => {\r\n    console.log(timestamp)\r\n}\r\n\r\nconst initialState = {\r\n    postsArray: [],\r\n    isError: false,\r\n    isLoading: false,\r\n    isSuccess: false,\r\n    message: ''\r\n}\r\n\r\nexport const createPost = createAsyncThunk('user/posts',  async (postData, thunkAPI) => {\r\n    try {\r\n        console.log('hi')\r\n        const token = thunkAPI.getState().auth.user.token\r\n        const res = await postService.createPost(postData, token)\r\n        return res\r\n    } catch (error) {\r\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\r\n        return thunkAPI.rejectWithValue(message)\r\n    }\r\n})\r\n\r\nexport const postSlice = createSlice({\r\n    name: 'posts',\r\n    initialState,\r\n    reducers: {\r\n        reset: (state) => initialState\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(createPost.pending, (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(createPost.fulfilled, (state, action) => {\r\n                state.isLoading = false\r\n                state.isSuccess = true\r\n                console.log('fulfilled')\r\n                state.postsArray.push(action.payload)\r\n            })\r\n            .addCase(createPost.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.isError = true\r\n                state.message = action.payload\r\n            })\r\n    }\r\n})\r\n\r\nexport default postSlice.reducer\r\nexport const { reset } = postSlice.actions","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\postService.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\AddWorkout.js",["246","247"],[],"import React, { useState } from \"react\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nexport default function AddWorkout({ workoutName, programName, test}) {\r\n\r\n    const newExercise = {\r\n        exerciseName: '',\r\n        setCount: '',\r\n        repRange: ''\r\n    }\r\n\r\n    const [exerciseList, setExerciseList] = useState([])\r\n    \r\n    function addExercise() {\r\n        setExerciseList(prevList => [\r\n            ...prevList,\r\n            newExercise\r\n        ])\r\n    }\r\n\r\n    function submitWorkout() {\r\n\r\n        addToServer()\r\n\r\n        setExerciseList([])\r\n\r\n        test++\r\n    }\r\n\r\n    function addToServer() {\r\n\r\n        // Adds workout to DB\r\n        // Automatically adds workout reference to program that is used with programName\r\n        fetch('/api/workouts/add-workout', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                workoutName,\r\n                programName,\r\n                exerciseList,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => console.log(data))\r\n    }\r\n\r\n    // PRETTY SIMPLE CHANGE TO AN INSANELY COMPLEX PROBLEM, TOOK ME SO LONG TO SOLVE LETS GOOO\r\n    function onChange(e, index) {\r\n        setExerciseList(prevState => {\r\n            return prevState.map(exercise => exercise == prevState[index] ? {...exercise, [e.target.name] : e.target.value } : exercise)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <table className='exercise-table'>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Exercise</th>\r\n                        <th># of Sets</th>\r\n                        <th>Rep Range</th>\r\n                    </tr>\r\n                    {/* <NewExercise key={keyId} id={keyId} exerciseInfo={exerciseInfo} handleExerciseInfo={handleExerciseInfo}/> */}\r\n                    {exerciseList.map((exercise, index) => {\r\n                        return <tr key={index}>\r\n                            <td>\r\n                                <input value={exercise.exerciseName} name='exerciseName' onChange={e => onChange(e, index)} placeholder='Bench Press' required></input>\r\n                            </td>\r\n                            <td>\r\n                                <input type='number' min='1' max='10' value={exercise.setCount} name='setCount' onChange={e => onChange(e, index)} placeholder='3' required></input>\r\n                            </td>\r\n                            <td >\r\n                                <input value={exercise.repRange} name='repRange' onChange={e => onChange(e, index)} placeholder='8-12' required></input>\r\n                            </td>\r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <AddIcon onClick={addExercise} />\r\n            <button onClick={submitWorkout}>Submit Workout</button>\r\n        </>\r\n    )\r\n}","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\NewExercise.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\workoutSlice.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\programSlice.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\JoinCommunity.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\MenuOption.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\LoggerHeader.js",["248","249"],[],"import React, { useState, useRef } from 'react'\r\nimport '../css/loggerHeader.css'\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport MenuOption from './MenuOption'\r\n\r\nexport default function LoggerHeader({ displayAddWorkout, displayLogger, workoutName, setWorkoutName, programName, workoutNameList, dropdownClick }) {\r\n\r\n    const [toggleDropdown, setToggleDropdown] = useState(false)\r\n    const [addingWorkout, setAddingWorkout] = useState(true)\r\n    const displayedOption = useRef()\r\n    \r\n    function displayOption(e) {\r\n        \r\n        setAddingWorkout(false)\r\n        // Otherwise the DOM doesn't update in time for there to be an innerText value for the nonexistent h1\r\n        setTimeout(() => {\r\n            displayedOption.current.innerText = e.target.innerText\r\n        }, 0);\r\n        \r\n    }\r\n\r\n    function toggleMenu() {\r\n        setToggleDropdown(prevState => !prevState)\r\n    }\r\n\r\n    function handleAddWorkoutClick() {\r\n        \r\n        setAddingWorkout(true)\r\n\r\n        toggleMenu()\r\n\r\n        displayAddWorkout()\r\n        \r\n    }\r\n\r\n    const menuOptions = workoutNameList.map((workout, index) => {\r\n        return <MenuOption key={index} name={workout} displayOption={displayOption} toggleMenu={toggleMenu} displayLogger={displayLogger} dropdownClick={dropdownClick}/>\r\n    })\r\n\r\n\r\n    return (\r\n        <div className='loggerHeader'>\r\n            <h1 className='community-name'>{programName}</h1>\r\n            <div className='dropdown'>\r\n                <div className={`select ${toggleDropdown && 'select-clicked'}`}>\r\n                    {addingWorkout ? \r\n                        (<input className='new-workout-input' value={workoutName} onChange={(e) => setWorkoutName(e.target.value)} placeholder='New Workout' autoFocus />)\r\n                        : \r\n                        (<h1 className='selected' ref={displayedOption}></h1>)}\r\n                    \r\n                    {/* <ArrowDropDownIcon className={`caret ${toggleDropdown && 'caret-rotate'}`} style={{fontSize: 40}} onClick={() => setToggleDropdown(prevState => !prevState)}/> */}\r\n                    <div className={`caret ${toggleDropdown && 'caret-rotate'}`} style={{fontSize: 40}} onClick={() => setToggleDropdown(prevState => !prevState)}></div>\r\n                </div>\r\n                <ul className={`dropdown-menu ${toggleDropdown && 'menu-open'}`}>                    \r\n                    {menuOptions}\r\n                    <li className='menu-option' onClick={handleAddWorkoutClick}>New Workout</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//<input value={workoutName} onChange={handleWorkoutNameChange}/> \r\n\r\n// Have an example, starter workout\r\n        // Everyone is part of it at first\r\n        // Called 'IRON Workout'","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\WorkoutTracker.js",["250","251"],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Communities.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\CommunitySidebar.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Friends.js",["252","253"],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\AddFriend.js",["254","255"],[],"import React from 'react'\r\nimport { Avatar, } from '@mui/material'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Post from './Post'\r\nimport socket from '../sockets/friendSocket'\r\n\r\nfunction AddFriend({ friend }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const { username, id } = friend\r\n    const myId = useSelector(state => state.auth.user._id)\r\n\r\n    function addFriend() {\r\n\r\n        fetch('/api/auth/friend', {\r\n            method: 'POST', \r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }, \r\n            body: JSON.stringify({myId, friendId : id})\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log('hi')\r\n                socket.emit('add-friend')\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Avatar />\r\n            <h2>{username}</h2>\r\n            <button onClick={addFriend}>Add Friend</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFriend","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\redux\\logWorkoutSlice.js",["256"],[],"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst initialState = {\r\n    userId: '',\r\n    workoutName: '',\r\n    workoutId: '',\r\n    programName: '',\r\n    exercises: []\r\n}\r\n\r\nexport const logWorkoutToDB = createAsyncThunk('/workout/log', async (thunkAPI) => {\r\n    try {   \r\n        fetch('', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify()\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n})\r\n\r\nconst logWorkoutSlice = createSlice({\r\n    name: 'logWorkout', \r\n    initialState,\r\n    reducers: {\r\n        logExercise: (state, action) => {\r\n            state.exercises.push(action.payload)\r\n        },\r\n        logWorkoutData: (state, action) => {\r\n            state.userId = action.payload.userId\r\n            state.workoutName = action.payload.workoutName\r\n            state.workoutId = action.payload.workoutId\r\n            state.programName = action.payload.programName\r\n        },\r\n        reset: (state) => initialState\r\n    }\r\n})\r\n\r\nexport default logWorkoutSlice.reducer\r\nexport const { logExercise, logWorkoutData, reset } = logWorkoutSlice.actions","C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Graph.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\UserInfo.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\sockets\\friendSocket.js",[],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\Leaderboard.js",["257","258","259","260","261","262","263"],[],"C:\\Users\\Michael\\Documents\\100devs\\workout-react-app\\frontend2\\src\\components\\LeaderboardUser.js",["264","265"],[],{"ruleId":"266","severity":1,"message":"267","line":21,"column":8,"nodeType":"268","endLine":21,"endColumn":10,"suggestions":"269"},{"ruleId":"270","severity":1,"message":"271","line":2,"column":8,"nodeType":"272","messageId":"273","endLine":2,"endColumn":18},{"ruleId":"270","severity":1,"message":"274","line":7,"column":10,"nodeType":"272","messageId":"273","endLine":7,"endColumn":21},{"ruleId":"266","severity":1,"message":"275","line":19,"column":8,"nodeType":"268","endLine":19,"endColumn":10,"suggestions":"276"},{"ruleId":"266","severity":1,"message":"277","line":32,"column":8,"nodeType":"268","endLine":32,"endColumn":16,"suggestions":"278"},{"ruleId":"270","severity":1,"message":"279","line":4,"column":18,"nodeType":"272","messageId":"273","endLine":4,"endColumn":28},{"ruleId":"270","severity":1,"message":"280","line":5,"column":10,"nodeType":"272","messageId":"273","endLine":5,"endColumn":14},{"ruleId":"266","severity":1,"message":"281","line":24,"column":8,"nodeType":"268","endLine":24,"endColumn":10,"suggestions":"282"},{"ruleId":"283","severity":1,"message":"284","line":29,"column":17,"nodeType":"285","endLine":29,"endColumn":35},{"ruleId":"286","severity":1,"message":"287","line":32,"column":31,"nodeType":"288","messageId":"289","endLine":32,"endColumn":33},{"ruleId":"286","severity":1,"message":"287","line":33,"column":31,"nodeType":"288","messageId":"289","endLine":33,"endColumn":33},{"ruleId":"266","severity":1,"message":"290","line":47,"column":8,"nodeType":"268","endLine":47,"endColumn":14,"suggestions":"291"},{"ruleId":"270","severity":1,"message":"292","line":50,"column":11,"nodeType":"272","messageId":"273","endLine":50,"endColumn":15},{"ruleId":"286","severity":1,"message":"287","line":61,"column":37,"nodeType":"288","messageId":"289","endLine":61,"endColumn":39},{"ruleId":"266","severity":1,"message":"293","line":27,"column":8,"nodeType":"268","endLine":27,"endColumn":10,"suggestions":"294"},{"ruleId":"266","severity":1,"message":"295","line":38,"column":8,"nodeType":"268","endLine":38,"endColumn":16,"suggestions":"296"},{"ruleId":"286","severity":1,"message":"297","line":12,"column":21,"nodeType":"288","messageId":"289","endLine":12,"endColumn":23},{"ruleId":"283","severity":1,"message":"284","line":20,"column":21,"nodeType":"285","endLine":20,"endColumn":68},{"ruleId":"270","severity":1,"message":"298","line":15,"column":14,"nodeType":"272","messageId":"273","endLine":15,"endColumn":27},{"ruleId":"266","severity":1,"message":"299","line":37,"column":8,"nodeType":"268","endLine":37,"endColumn":23,"suggestions":"300"},{"ruleId":"301","severity":1,"message":"302","line":40,"column":9,"nodeType":"303","messageId":"304","endLine":54,"endColumn":10},{"ruleId":"286","severity":1,"message":"287","line":52,"column":72,"nodeType":"288","messageId":"289","endLine":52,"endColumn":74},{"ruleId":"270","severity":1,"message":"279","line":3,"column":18,"nodeType":"272","messageId":"273","endLine":3,"endColumn":28},{"ruleId":"270","severity":1,"message":"305","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":15},{"ruleId":"270","severity":1,"message":"306","line":8,"column":10,"nodeType":"272","messageId":"273","endLine":8,"endColumn":21},{"ruleId":"270","severity":1,"message":"307","line":18,"column":19,"nodeType":"272","messageId":"273","endLine":18,"endColumn":28},{"ruleId":"270","severity":1,"message":"308","line":35,"column":7,"nodeType":"272","messageId":"273","endLine":35,"endColumn":13},{"ruleId":"270","severity":1,"message":"309","line":4,"column":7,"nodeType":"272","messageId":"273","endLine":4,"endColumn":20},{"ruleId":"270","severity":1,"message":"306","line":3,"column":10,"nodeType":"272","messageId":"273","endLine":3,"endColumn":21},{"ruleId":"286","severity":1,"message":"287","line":54,"column":55,"nodeType":"288","messageId":"289","endLine":54,"endColumn":57},{"ruleId":"270","severity":1,"message":"310","line":3,"column":8,"nodeType":"272","messageId":"273","endLine":3,"endColumn":25},{"ruleId":"311","severity":1,"message":"312","line":49,"column":26,"nodeType":"285","endLine":49,"endColumn":73},{"ruleId":"270","severity":1,"message":"313","line":6,"column":10,"nodeType":"272","messageId":"273","endLine":6,"endColumn":24},{"ruleId":"270","severity":1,"message":"313","line":40,"column":14,"nodeType":"272","messageId":"273","endLine":40,"endColumn":28},{"ruleId":"270","severity":1,"message":"314","line":13,"column":20,"nodeType":"272","messageId":"273","endLine":13,"endColumn":29},{"ruleId":"270","severity":1,"message":"315","line":14,"column":22,"nodeType":"272","messageId":"273","endLine":14,"endColumn":33},{"ruleId":"270","severity":1,"message":"316","line":4,"column":8,"nodeType":"272","messageId":"273","endLine":4,"endColumn":12},{"ruleId":"270","severity":1,"message":"317","line":9,"column":11,"nodeType":"272","messageId":"273","endLine":9,"endColumn":19},{"ruleId":"270","severity":1,"message":"306","line":2,"column":10,"nodeType":"272","messageId":"273","endLine":2,"endColumn":21},{"ruleId":"270","severity":1,"message":"318","line":1,"column":10,"nodeType":"272","messageId":"273","endLine":1,"endColumn":30},{"ruleId":"266","severity":1,"message":"319","line":37,"column":8,"nodeType":"268","endLine":37,"endColumn":25,"suggestions":"320"},{"ruleId":"286","severity":1,"message":"297","line":47,"column":25,"nodeType":"288","messageId":"289","endLine":47,"endColumn":27},{"ruleId":"270","severity":1,"message":"321","line":55,"column":11,"nodeType":"272","messageId":"273","endLine":55,"endColumn":25},{"ruleId":"286","severity":1,"message":"297","line":57,"column":25,"nodeType":"288","messageId":"289","endLine":57,"endColumn":27},{"ruleId":"286","severity":1,"message":"287","line":66,"column":27,"nodeType":"288","messageId":"289","endLine":66,"endColumn":29},{"ruleId":"286","severity":1,"message":"287","line":68,"column":34,"nodeType":"288","messageId":"289","endLine":68,"endColumn":36},{"ruleId":"270","severity":1,"message":"322","line":8,"column":11,"nodeType":"272","messageId":"273","endLine":8,"endColumn":17},{"ruleId":"266","severity":1,"message":"323","line":14,"column":8,"nodeType":"268","endLine":14,"endColumn":25,"suggestions":"324"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.community'. Either include it or remove the dependency array.","ArrayExpression",["325"],"no-unused-vars","'PeopleIcon' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["326"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.",["327"],"'IconButton' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.",["328"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'programId'. Either include it or remove the dependency array.",["329"],"'name' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["330"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.",["331"],"Expected '!==' and instead saw '!='.","'joinCommunity' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'exerciseData'. Either include them or remove the dependency array.",["332"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'AddIcon' is defined but never used.","'useSelector' is defined but never used.","'isLoading' is assigned a value but never used.","'logout' is assigned a value but never used.","'convertToDate' is assigned a value but never used.","'ArrowDropDownIcon' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'logWorkoutToDB' is defined but never used.","'setFriend' is assigned a value but never used.","'setIsActive' is assigned a value but never used.","'Post' is defined but never used.","'dispatch' is assigned a value but never used.","'ConstructionOutlined' is defined but never used.","React Hook useEffect has missing dependencies: 'userCommunityId' and 'userId'. Either include them or remove the dependency array.",["333"],"'tableElements2' is assigned a value but never used.","'userId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'communityId'. Either include it or remove the dependency array.",["334"],{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"337","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"344","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},"Update the dependencies array to be: [user.community]",{"range":"353","text":"354"},"Update the dependencies array to be: [userId]",{"range":"355","text":"356"},{"range":"357","text":"356"},"Update the dependencies array to be: [location.pathname]",{"range":"358","text":"359"},"Update the dependencies array to be: [programId, test]",{"range":"360","text":"361"},"Update the dependencies array to be: [id]",{"range":"362","text":"363"},{"range":"364","text":"363"},"Update the dependencies array to be: [dispatch, exerciseData, submitWorkout]",{"range":"365","text":"366"},"Update the dependencies array to be: [leaderboardMode, userCommunityId, userId]",{"range":"367","text":"368"},"Update the dependencies array to be: [communityId, leaderboardMode]",{"range":"369","text":"370"},[592,594],"[user.community]",[601,603],"[userId]",[1014,1022],[835,837],"[location.pathname]",[1671,1677],"[programId, test]",[974,976],"[id]",[1281,1289],[1160,1175],"[dispatch, exerciseData, submitWorkout]",[1547,1564],"[leaderboardMode, userCommunityId, userId]",[553,570],"[communityId, leaderboardMode]"]